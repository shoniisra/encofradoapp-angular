{"version":3,"sources":["./src/app/pages/pages/auth/login/login.component.html","./src/@vex/animations/fade-in-up.animation.ts","./src/app/pages/pages/auth/login/login-routing.module.ts","./src/app/pages/pages/auth/login/login.component.scss","./src/app/pages/pages/auth/login/login.component.ts","./src/app/pages/pages/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-pages-auth-login-login-module.js","sourcesContent":["export default \"<div class=\\\"w-full h-full bg-pattern\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div @fadeInUp class=\\\"card overflow-hidden w-full max-w-xs\\\">\\n    <div class=\\\"p-6 pb-0\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div class=\\\"fill-current text-center\\\">\\n        <img class=\\\"w-16\\\" src=\\\"assets/img/logo.png\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"text-center mt-4\\\">\\n      <h2 class=\\\"title m-0\\\">Welcome back</h2>\\n      <h4 class=\\\"body-2 text-secondary m-0\\\">Sign in with your credentials below.</h4>\\n    </div>\\n\\n    <div [formGroup]=\\\"form\\\" class=\\\"p-6\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n      <div fxFlex=\\\"auto\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field fxFlex=\\\"grow\\\">\\n          <mat-label>E-Mail</mat-label>\\n          <input formControlName=\\\"email\\\" matInput required>\\n          <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">We need an email address to log you in</mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"grow\\\">\\n          <mat-label>Password</mat-label>\\n          <input [type]=\\\"inputType\\\" formControlName=\\\"password\\\" matInput required>\\n          <button (click)=\\\"toggleVisibility()\\\" mat-icon-button matSuffix matTooltip=\\\"Toggle Visibility\\\" type=\\\"button\\\">\\n            <mat-icon *ngIf=\\\"visible\\\" [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n            <mat-icon *ngIf=\\\"!visible\\\" [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n          </button>\\n          <mat-hint>Click the eye to toggle visibility</mat-hint>\\n          <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">We need a password to log you in</mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-checkbox class=\\\"caption\\\" color=\\\"primary\\\">Remember Me</mat-checkbox>\\n        <a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"caption\\\">Forgot Password?</a>\\n      </div>\\n\\n      <button (click)=\\\"send()\\\" color=\\\"primary\\\" mat-raised-button type=\\\"button\\\">\\n        SIGN IN\\n      </button>\\n\\n      <p class=\\\"text-secondary text-center\\\">\\n        Don't have an account?<br/>\\n        <a [routerLink]=\\\"['/register']\\\">Click here to create one</a>\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInUpAnimation(duration: number) {\n  return trigger('fadeInUp', [\n    transition(':enter', [\n      style({\n        transform: 'translateY(20px)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const fadeInUp400ms = fadeInUpAnimation(400);\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhZ2VzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'vex-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  send() {\n    this.router.navigate(['/']);\n    this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'LOL THANKS', {\n      duration: 10000\n    });\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    IconModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ]\n})\nexport class LoginModule {\n}\n"],"sourceRoot":"webpack:///"}