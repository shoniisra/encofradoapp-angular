{"version":3,"file":"angular-draggable-droppable.js.map","sources":["ng://angular-draggable-droppable/lib/draggable-helper.provider.ts","ng://angular-draggable-droppable/lib/draggable-scroll-container.directive.ts","ng://angular-draggable-droppable/lib/draggable.directive.ts","ng://angular-draggable-droppable/lib/droppable.directive.ts","ng://angular-draggable-droppable/lib/drag-and-drop.module.ts"],"sourcesContent":["import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nexport interface CurrentDragData {\n  clientX: number;\n  clientY: number;\n  dropData: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DraggableHelper {\n  currentDrag = new Subject<Subject<CurrentDragData>>();\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: '[mwlDraggableScrollContainer]'\n})\nexport class DraggableScrollContainerDirective implements OnInit {\n  /**\n   * Trigger the DragStart after a long touch in scrollable container when true\n   */\n  @Input()\n  activeLongPressDrag: boolean = false;\n\n  /**\n   * Configuration of a long touch\n   * Duration in ms of a long touch before activating DragStart\n   * Delta of the\n   */\n  @Input()\n  longPressConfig = { duration: 300, delta: 30 };\n\n  private cancelledScroll = false;\n\n  constructor(\n    public elementRef: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      this.renderer.listen(\n        this.elementRef.nativeElement,\n        'touchmove',\n        (event: TouchEvent) => {\n          if (this.cancelledScroll && event.cancelable) {\n            event.preventDefault();\n          }\n        }\n      );\n    });\n  }\n\n  disableScroll(): void {\n    this.cancelledScroll = true;\n    this.renderer.setStyle(this.elementRef.nativeElement, 'overflow', 'hidden');\n  }\n\n  enableScroll(): void {\n    this.cancelledScroll = false;\n    this.renderer.setStyle(this.elementRef.nativeElement, 'overflow', 'auto');\n  }\n\n  hasScrollbar(): boolean {\n    const containerHasHorizontalScroll =\n      this.elementRef.nativeElement.scrollWidth -\n        this.elementRef.nativeElement.clientWidth >\n      0;\n    const containerHasVerticalScroll =\n      this.elementRef.nativeElement.scrollHeight -\n        this.elementRef.nativeElement.clientHeight >\n      0;\n    return containerHasHorizontalScroll || containerHasVerticalScroll;\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges,\n  Inject,\n  TemplateRef,\n  ViewContainerRef,\n  Optional\n} from '@angular/core';\nimport { Subject, Observable, merge, ReplaySubject, combineLatest } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  takeUntil,\n  take,\n  takeLast,\n  pairwise,\n  share,\n  filter,\n  count,\n  startWith\n} from 'rxjs/operators';\nimport { CurrentDragData, DraggableHelper } from './draggable-helper.provider';\nimport { DOCUMENT } from '@angular/common';\nimport autoScroll from 'dom-autoscroller';\nimport { DraggableScrollContainerDirective } from './draggable-scroll-container.directive';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport interface DragPointerDownEvent extends Coordinates {}\n\nexport interface DragStartEvent {\n  cancelDrag$: ReplaySubject<void>;\n}\n\nexport interface DragMoveEvent extends Coordinates {}\n\nexport interface DragEndEvent extends Coordinates {\n  dragCancelled: boolean;\n}\n\nexport interface ValidateDragParams extends Coordinates {\n  transform: {\n    x: number;\n    y: number;\n  };\n}\n\nexport type ValidateDrag = (params: ValidateDragParams) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nexport interface TimeLongPress {\n  timerBegin: number;\n  timerEnd: number;\n}\n\nexport interface GhostElementCreatedEvent {\n  clientX: number;\n  clientY: number;\n  element: HTMLElement;\n}\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input()\n  dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input()\n  dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input()\n  dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input()\n  ghostDragEnabled: boolean = true;\n\n  /**\n   * Show the original element when ghostDragEnabled is true\n   */\n  @Input()\n  showOriginalElementWhileDragging: boolean = false;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input()\n  validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input()\n  dragCursor: string = '';\n\n  /**\n   * The css class to apply when the element is being dragged\n   */\n  @Input()\n  dragActiveClass: string;\n\n  /**\n   * The element the ghost element will be appended to. Default is next to the dragged element\n   */\n  @Input()\n  ghostElementAppendTo: HTMLElement;\n\n  /**\n   * An ng-template to be inserted into the parent element of the ghost element. It will overwrite any child nodes.\n   */\n  @Input()\n  ghostElementTemplate: TemplateRef<any>;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output()\n  dragPointerDown = new EventEmitter<DragPointerDownEvent>();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event.\n   * If you call $event.cancelDrag$.emit() it will cancel the current drag\n   */\n  @Output()\n  dragStart = new EventEmitter<DragStartEvent>();\n\n  /**\n   * Called after the ghost element has been created\n   */\n  @Output()\n  ghostElementCreated = new EventEmitter<GhostElementCreatedEvent>();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output()\n  dragging = new EventEmitter<DragMoveEvent>();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output()\n  dragEnd = new EventEmitter<DragEndEvent>();\n\n  /**\n   * @hidden\n   */\n  pointerDown$ = new Subject<PointerEvent>();\n\n  /**\n   * @hidden\n   */\n  pointerMove$ = new Subject<PointerEvent>();\n\n  /**\n   * @hidden\n   */\n  pointerUp$ = new Subject<PointerEvent>();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  private ghostElement: HTMLElement | null;\n\n  private destroy$ = new Subject();\n\n  private timeLongPress: TimeLongPress = { timerBegin: 0, timerEnd: 0 };\n\n  private scroller: { destroy: () => void };\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private element: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone,\n    private vcr: ViewContainerRef,\n    @Optional() private scrollContainer: DraggableScrollContainerDirective,\n    @Inject(DOCUMENT) private document: any\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDragged$: Observable<any> = this.pointerDown$.pipe(\n      filter(() => this.canDrag()),\n      mergeMap((pointerDownEvent: PointerEvent) => {\n        // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61\n        // stop mouse events propagating up the chain\n        if (pointerDownEvent.event.stopPropagation && !this.scrollContainer) {\n          pointerDownEvent.event.stopPropagation();\n        }\n\n        // hack to prevent text getting selected in safari while dragging\n        const globalDragStyle: HTMLStyleElement = this.renderer.createElement(\n          'style'\n        );\n        this.renderer.setAttribute(globalDragStyle, 'type', 'text/css');\n        this.renderer.appendChild(\n          globalDragStyle,\n          this.renderer.createText(`\n          body * {\n           -moz-user-select: none;\n           -ms-user-select: none;\n           -webkit-user-select: none;\n           user-select: none;\n          }\n        `)\n        );\n        this.document.head.appendChild(globalDragStyle);\n\n        const startScrollPosition = this.getScrollPosition();\n\n        const scrollContainerScroll$ = new Observable(observer => {\n          const scrollContainer = this.scrollContainer\n            ? this.scrollContainer.elementRef.nativeElement\n            : 'window';\n          return this.renderer.listen(scrollContainer, 'scroll', e =>\n            observer.next(e)\n          );\n        }).pipe(\n          startWith(startScrollPosition),\n          map(() => this.getScrollPosition())\n        );\n\n        const currentDrag$ = new Subject<CurrentDragData>();\n        const cancelDrag$ = new ReplaySubject<void>();\n\n        this.zone.run(() => {\n          this.dragPointerDown.next({ x: 0, y: 0 });\n        });\n\n        const dragComplete$ = merge(\n          this.pointerUp$,\n          this.pointerDown$,\n          cancelDrag$,\n          this.destroy$\n        ).pipe(share());\n\n        const pointerMove = combineLatest<\n          PointerEvent,\n          { top: number; left: number }\n        >(this.pointerMove$, scrollContainerScroll$).pipe(\n          map(([pointerMoveEvent, scroll]) => {\n            return {\n              currentDrag$,\n              transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n              transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n              clientX: pointerMoveEvent.clientX,\n              clientY: pointerMoveEvent.clientY,\n              scrollLeft: scroll.left,\n              scrollTop: scroll.top\n            };\n          }),\n          map(moveData => {\n            if (this.dragSnapGrid.x) {\n              moveData.transformX =\n                Math.round(moveData.transformX / this.dragSnapGrid.x) *\n                this.dragSnapGrid.x;\n            }\n\n            if (this.dragSnapGrid.y) {\n              moveData.transformY =\n                Math.round(moveData.transformY / this.dragSnapGrid.y) *\n                this.dragSnapGrid.y;\n            }\n\n            return moveData;\n          }),\n          map(moveData => {\n            if (!this.dragAxis.x) {\n              moveData.transformX = 0;\n            }\n\n            if (!this.dragAxis.y) {\n              moveData.transformY = 0;\n            }\n\n            return moveData;\n          }),\n          map(moveData => {\n            const scrollX = moveData.scrollLeft - startScrollPosition.left;\n            const scrollY = moveData.scrollTop - startScrollPosition.top;\n            return {\n              ...moveData,\n              x: moveData.transformX + scrollX,\n              y: moveData.transformY + scrollY\n            };\n          }),\n          filter(\n            ({ x, y, transformX, transformY }) =>\n              !this.validateDrag ||\n              this.validateDrag({\n                x,\n                y,\n                transform: { x: transformX, y: transformY }\n              })\n          ),\n          takeUntil(dragComplete$),\n          share()\n        );\n\n        const dragStarted$ = pointerMove.pipe(\n          take(1),\n          share()\n        );\n        const dragEnded$ = pointerMove.pipe(\n          takeLast(1),\n          share()\n        );\n\n        dragStarted$.subscribe(({ clientX, clientY, x, y }) => {\n          this.zone.run(() => {\n            this.dragStart.next({ cancelDrag$ });\n          });\n\n          this.scroller = autoScroll(\n            [\n              this.scrollContainer\n                ? this.scrollContainer.elementRef.nativeElement\n                : this.document.defaultView\n            ],\n            {\n              margin: 20,\n              autoScroll() {\n                return true;\n              }\n            }\n          );\n\n          this.renderer.addClass(\n            this.element.nativeElement,\n            this.dragActiveClass\n          );\n\n          if (this.ghostDragEnabled) {\n            const rect = this.element.nativeElement.getBoundingClientRect();\n            const clone = this.element.nativeElement.cloneNode(\n              true\n            ) as HTMLElement;\n            if (!this.showOriginalElementWhileDragging) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'visibility',\n                'hidden'\n              );\n            }\n\n            if (this.ghostElementAppendTo) {\n              this.ghostElementAppendTo.appendChild(clone);\n            } else {\n              this.element.nativeElement.parentNode!.insertBefore(\n                clone,\n                this.element.nativeElement.nextSibling\n              );\n            }\n\n            this.ghostElement = clone;\n\n            this.setElementStyles(clone, {\n              position: 'fixed',\n              top: `${rect.top}px`,\n              left: `${rect.left}px`,\n              width: `${rect.width}px`,\n              height: `${rect.height}px`,\n              cursor: this.dragCursor,\n              margin: '0'\n            });\n\n            if (this.ghostElementTemplate) {\n              const viewRef = this.vcr.createEmbeddedView(\n                this.ghostElementTemplate\n              );\n              clone.innerHTML = '';\n              viewRef.rootNodes\n                .filter(node => node instanceof Node)\n                .forEach(node => {\n                  clone.appendChild(node);\n                });\n              dragEnded$.subscribe(() => {\n                this.vcr.remove(this.vcr.indexOf(viewRef));\n              });\n            }\n\n            this.zone.run(() => {\n              this.ghostElementCreated.emit({\n                clientX: clientX - x,\n                clientY: clientY - y,\n                element: clone\n              });\n            });\n\n            dragEnded$.subscribe(() => {\n              clone.parentElement!.removeChild(clone);\n              this.ghostElement = null;\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'visibility',\n                ''\n              );\n            });\n          }\n\n          this.draggableHelper.currentDrag.next(currentDrag$);\n        });\n\n        dragEnded$\n          .pipe(\n            mergeMap(dragEndData => {\n              const dragEndData$ = cancelDrag$.pipe(\n                count(),\n                take(1),\n                map(calledCount => ({\n                  ...dragEndData,\n                  dragCancelled: calledCount > 0\n                }))\n              );\n              cancelDrag$.complete();\n              return dragEndData$;\n            })\n          )\n          .subscribe(({ x, y, dragCancelled }) => {\n            this.scroller.destroy();\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y, dragCancelled });\n            });\n            this.renderer.removeClass(\n              this.element.nativeElement,\n              this.dragActiveClass\n            );\n            currentDrag$.complete();\n          });\n\n        merge(dragComplete$, dragEnded$)\n          .pipe(take(1))\n          .subscribe(() => {\n            this.document.head.removeChild(globalDragStyle);\n          });\n\n        return pointerMove;\n      }),\n      share()\n    );\n\n    merge(\n      pointerDragged$.pipe(\n        take(1),\n        map(value => [, value])\n      ),\n      pointerDragged$.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        }),\n        map(([previous, next]) => next)\n      )\n      .subscribe(\n        ({ x, y, currentDrag$, clientX, clientY, transformX, transformY }) => {\n          this.zone.run(() => {\n            this.dragging.next({ x, y });\n          });\n          if (this.ghostElement) {\n            const transform = `translate(${transformX}px, ${transformY}px)`;\n            this.setElementStyles(this.ghostElement, {\n              transform,\n              '-webkit-transform': transform,\n              '-ms-transform': transform,\n              '-moz-transform': transform,\n              '-o-transform': transform\n            });\n          }\n          currentDrag$.next({\n            clientX,\n            clientY,\n            dropData: this.dropData\n          });\n        }\n      );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dragAxis) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown$.complete();\n    this.pointerMove$.complete();\n    this.pointerUp$.complete();\n    this.destroy$.next();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove$.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown$.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp$.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.scrollContainer) {\n      try {\n        event.preventDefault();\n      } catch (e) {}\n    }\n    let hasContainerScrollbar: boolean;\n    let startScrollPosition: any;\n    let isDragActivated: boolean;\n    if (this.scrollContainer && this.scrollContainer.activeLongPressDrag) {\n      this.timeLongPress.timerBegin = Date.now();\n      isDragActivated = false;\n      hasContainerScrollbar = this.scrollContainer.hasScrollbar();\n      startScrollPosition = this.getScrollPosition();\n    }\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          if (\n            this.scrollContainer &&\n            this.scrollContainer.activeLongPressDrag &&\n            !isDragActivated &&\n            hasContainerScrollbar\n          ) {\n            isDragActivated = this.shouldBeginDrag(\n              event,\n              touchMoveEvent,\n              startScrollPosition\n            );\n          }\n          if (\n            !this.scrollContainer ||\n            !this.scrollContainer.activeLongPressDrag ||\n            !hasContainerScrollbar ||\n            isDragActivated\n          ) {\n            this.pointerMove$.next({\n              event: touchMoveEvent,\n              clientX: touchMoveEvent.targetTouches[0].clientX,\n              clientY: touchMoveEvent.targetTouches[0].clientY\n            });\n          }\n        }\n      );\n    }\n    this.pointerDown$.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n      if (this.scrollContainer && this.scrollContainer.activeLongPressDrag) {\n        this.scrollContainer.enableScroll();\n      }\n    }\n    this.pointerUp$.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor('');\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n\n  private setElementStyles(\n    element: HTMLElement,\n    styles: { [key: string]: string }\n  ) {\n    Object.keys(styles).forEach(key => {\n      this.renderer.setStyle(element, key, styles[key]);\n    });\n  }\n\n  private getScrollPosition() {\n    if (this.scrollContainer) {\n      return {\n        top: this.scrollContainer.elementRef.nativeElement.scrollTop,\n        left: this.scrollContainer.elementRef.nativeElement.scrollLeft\n      };\n    } else {\n      return {\n        top: window.pageYOffset || document.documentElement.scrollTop,\n        left: window.pageXOffset || document.documentElement.scrollLeft\n      };\n    }\n  }\n\n  private shouldBeginDrag(\n    event: TouchEvent,\n    touchMoveEvent: TouchEvent,\n    startScrollPosition: any\n  ): boolean {\n    const moveScrollPosition = this.getScrollPosition();\n    const deltaScroll = {\n      top: Math.abs(moveScrollPosition.top - startScrollPosition.top),\n      left: Math.abs(moveScrollPosition.left - startScrollPosition.left)\n    };\n    const deltaX =\n      Math.abs(\n        touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX\n      ) - deltaScroll.left;\n    const deltaY =\n      Math.abs(\n        touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY\n      ) - deltaScroll.top;\n    const deltaTotal = deltaX + deltaY;\n    if (\n      deltaTotal > this.scrollContainer.longPressConfig.delta ||\n      deltaScroll.top > 0 ||\n      deltaScroll.left > 0\n    ) {\n      this.timeLongPress.timerBegin = Date.now();\n    }\n    this.timeLongPress.timerEnd = Date.now();\n    const duration =\n      this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;\n    if (duration >= this.scrollContainer.longPressConfig.duration) {\n      this.scrollContainer.disableScroll();\n      return true;\n    }\n    return false;\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone,\n  Input,\n  Renderer2,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged, pairwise, filter, map } from 'rxjs/operators';\nimport { DraggableHelper } from './draggable-helper.provider';\nimport { DraggableScrollContainerDirective } from './draggable-scroll-container.directive';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX <= rect.right &&\n    clientY >= rect.top &&\n    clientY <= rect.bottom\n  );\n}\n\nexport interface DropEvent<T = any> {\n  dropData: T;\n}\n\n@Directive({\n  selector: '[mwlDroppable]'\n})\nexport class DroppableDirective implements OnInit, OnDestroy {\n  /**\n   * Added to the element when an element is dragged over it\n   */\n  @Input()\n  dragOverClass: string;\n\n  /**\n   * Added to the element any time a draggable element is being dragged\n   */\n  @Input()\n  dragActiveClass: string;\n\n  /**\n   * Called when a draggable element starts overlapping the element\n   */\n  @Output()\n  dragEnter = new EventEmitter<DropEvent>();\n\n  /**\n   * Called when a draggable element stops overlapping the element\n   */\n  @Output()\n  dragLeave = new EventEmitter<DropEvent>();\n\n  /**\n   * Called when a draggable element is moved over the element\n   */\n  @Output()\n  dragOver = new EventEmitter<DropEvent>();\n\n  /**\n   * Called when a draggable element is dropped on this element\n   */\n  @Output()\n  drop = new EventEmitter<DropEvent>(); // tslint:disable-line no-output-named-after-standard-event\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef<HTMLElement>,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone,\n    private renderer: Renderer2,\n    @Optional() private scrollContainer: DraggableScrollContainerDirective\n  ) {}\n\n  ngOnInit() {\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      drag$ => {\n        this.renderer.addClass(\n          this.element.nativeElement,\n          this.dragActiveClass\n        );\n        const droppableElement: {\n          rect?: ClientRect;\n          updateCache: boolean;\n          scrollContainerRect?: ClientRect;\n        } = {\n          updateCache: true\n        };\n\n        const deregisterScrollListener = this.renderer.listen(\n          this.scrollContainer\n            ? this.scrollContainer.elementRef.nativeElement\n            : 'window',\n          'scroll',\n          () => {\n            droppableElement.updateCache = true;\n          }\n        );\n\n        let currentDragDropData: any;\n        const overlaps$ = drag$.pipe(\n          map(({ clientX, clientY, dropData }) => {\n            currentDragDropData = dropData;\n            if (droppableElement.updateCache) {\n              droppableElement.rect = this.element.nativeElement.getBoundingClientRect();\n              if (this.scrollContainer) {\n                droppableElement.scrollContainerRect = this.scrollContainer.elementRef.nativeElement.getBoundingClientRect();\n              }\n              droppableElement.updateCache = false;\n            }\n            const isWithinElement = isCoordinateWithinRectangle(\n              clientX,\n              clientY,\n              droppableElement.rect as ClientRect\n            );\n            if (droppableElement.scrollContainerRect) {\n              return (\n                isWithinElement &&\n                isCoordinateWithinRectangle(\n                  clientX,\n                  clientY,\n                  droppableElement.scrollContainerRect as ClientRect\n                )\n              );\n            } else {\n              return isWithinElement;\n            }\n          })\n        );\n\n        const overlapsChanged$ = overlaps$.pipe(distinctUntilChanged());\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged$\n          .pipe(filter(overlapsNow => overlapsNow))\n          .subscribe(() => {\n            dragOverActive = true;\n            this.renderer.addClass(\n              this.element.nativeElement,\n              this.dragOverClass\n            );\n            this.zone.run(() => {\n              this.dragEnter.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        overlaps$.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged$\n          .pipe(\n            pairwise(),\n            filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          )\n          .subscribe(() => {\n            dragOverActive = false;\n            this.renderer.removeClass(\n              this.element.nativeElement,\n              this.dragOverClass\n            );\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag$.subscribe({\n          complete: () => {\n            deregisterScrollListener();\n            this.renderer.removeClass(\n              this.element.nativeElement,\n              this.dragActiveClass\n            );\n            if (dragOverActive) {\n              this.renderer.removeClass(\n                this.element.nativeElement,\n                this.dragOverClass\n              );\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.currentDragSubscription) {\n      this.currentDragSubscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DroppableDirective } from './droppable.directive';\nimport { DraggableScrollContainerDirective } from './draggable-scroll-container.directive';\n\n@NgModule({\n  declarations: [\n    DraggableDirective,\n    DroppableDirective,\n    DraggableScrollContainerDirective\n  ],\n  exports: [\n    DraggableDirective,\n    DroppableDirective,\n    DraggableScrollContainerDirective\n  ]\n})\nexport class DragAndDropModule {}\n"],"names":[],"mappings":"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"}
