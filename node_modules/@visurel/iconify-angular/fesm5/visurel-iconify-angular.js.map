{"version":3,"file":"visurel-iconify-angular.js","sources":["ng://@visurel/iconify-angular/lib/svg.ts","ng://@visurel/iconify-angular/lib/icon.directive.ts","ng://@visurel/iconify-angular/lib/icon.module.ts"],"sourcesContent":["/* tslint:disable:no-redundant-jsdoc variable-name no-conditional-assignment no-bitwise */\r\n\r\nimport { IconProps } from './icon-props.interface';\r\n\r\n/**\r\n * Unique id counter\r\n */\r\nlet idCounter = 0;\r\n\r\n/**\r\n * Regex used to split dimensions\r\n */\r\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\n\r\n/**\r\n * Attributes used for icon\r\n */\r\nconst iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\r\n\r\n/**\r\n * Default attribute values\r\n */\r\nconst defaultAttributes = {\r\n  left: 0,\r\n  top: 0,\r\n  width: 16,\r\n  height: 16,\r\n  rotate: 0,\r\n  hFlip: false,\r\n  vFlip: false\r\n};\r\n\r\n/**\r\n * Add missing properties to icon\r\n *\r\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\r\n *\r\n * JavaScript version uses separate file so this function could be used in React and other components without loading\r\n * entire Collection class.\r\n */\r\nexport function normalize(data: object): object {\r\n  const item = Object.assign(Object.create(null), defaultAttributes, data);\r\n  if (item.inlineTop === void 0) {\r\n    item.inlineTop = item.top;\r\n  }\r\n  if (item.inlineHeight === void 0) {\r\n    item.inlineHeight = item.height;\r\n  }\r\n  if (item.verticalAlign === void 0) {\r\n    // -0.143 if icon is designed for 14px height,\r\n    // otherwise assume icon is designed for 16px height\r\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\r\n  }\r\n  return item;\r\n}\r\n\r\n/**\r\n * Get preserveAspectRatio attribute value\r\n */\r\nexport function getAlignment(align: { horizontal: string; vertical: string; slice: boolean }): string {\r\n  let result;\r\n  switch (align.horizontal) {\r\n    case 'left':\r\n      result = 'xMin';\r\n      break;\r\n\r\n    case 'right':\r\n      result = 'xMax';\r\n      break;\r\n\r\n    default:\r\n      result = 'xMid';\r\n  }\r\n  switch (align.vertical) {\r\n    case 'top':\r\n      result += 'YMin';\r\n      break;\r\n\r\n    case 'bottom':\r\n      result += 'YMax';\r\n      break;\r\n\r\n    default:\r\n      result += 'YMid';\r\n  }\r\n  result += align.slice ? ' slice' : ' meet';\r\n  return result;\r\n}\r\n\r\n/**\r\n * SVG class\r\n *\r\n * @see @iconify/json-tools/src/svg.js\r\n */\r\nexport class SVG {\r\n  /**\r\n   * Constructor\r\n   *\r\n   *  Use Collection.getIconData() to retrieve icon data\r\n   */\r\n  constructor(private _icon) {}\r\n\r\n  /**\r\n   * Calculate second dimension when only 1 dimension is set\r\n   * If size == width, ratio = height/width\r\n   * If size == height, ratio = width/height\r\n   */\r\n  static calculateDimension(size: string | number, ratio: number, precision = 100): string | number | null {\r\n    if (ratio === 1) {\r\n      return size;\r\n    }\r\n\r\n    if (typeof size === 'number') {\r\n      return Math.ceil(size * ratio * precision) / precision;\r\n    }\r\n\r\n    // split code into sets of strings and numbers\r\n    const split = size.split(unitsSplit);\r\n    if (split === null || !split.length) {\r\n      return null;\r\n    }\r\n    const results = [];\r\n    let code = split.shift();\r\n    let isNumber = unitsTest.test(code);\r\n    let num;\r\n\r\n    while (true) {\r\n      if (isNumber) {\r\n        num = parseFloat(code);\r\n        if (isNaN(num)) {\r\n          results.push(code);\r\n        } else {\r\n          results.push(Math.ceil(num * ratio * precision) / precision);\r\n        }\r\n      } else {\r\n        results.push(code);\r\n      }\r\n\r\n      // next\r\n      code = split.shift();\r\n      if (code === void 0) {\r\n        return results.join('');\r\n      }\r\n      isNumber = !isNumber;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace IDs in SVG output with unique IDs\r\n   * Fast replacement without parsing XML, assuming commonly used patterns.\r\n   */\r\n  static replaceIDs(body: string): string {\r\n    const regex = /\\sid=\"(\\S+)\"/g;\r\n    const ids = [];\r\n    let match: RegExpExecArray;\r\n    let prefix: string;\r\n\r\n    function strReplace(search, replace, subject) {\r\n      let pos = 0;\r\n\r\n      while ((pos = subject.indexOf(search, pos)) !== -1) {\r\n        subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\r\n        pos += replace.length;\r\n      }\r\n\r\n      return subject;\r\n    }\r\n\r\n    // Find all IDs\r\n    while (match = regex.exec(body)) {\r\n      ids.push(match[1]);\r\n    }\r\n    if (!ids.length) {\r\n      return body;\r\n    }\r\n\r\n    prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-';\r\n\r\n    // Replace with unique ids\r\n    ids.forEach((id) => {\r\n      const newID = prefix + idCounter;\r\n      idCounter++;\r\n      body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\r\n      body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\r\n      body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\r\n    });\r\n\r\n    return body;\r\n  }\r\n\r\n  /**\r\n   * Get SVG attributes\r\n   */\r\n  getAttributes(props: IconProps) {\r\n    const item = this._icon;\r\n    if (typeof props !== 'object') {\r\n      props = Object.create(null);\r\n    }\r\n\r\n    // Set data\r\n    const align = {\r\n      horizontal: 'center',\r\n      vertical: 'middle',\r\n      slice: false\r\n    };\r\n    const transform = {\r\n      rotate: item.rotate,\r\n      hFlip: item.hFlip,\r\n      vFlip: item.vFlip\r\n    };\r\n    const style = Object.create(null);\r\n\r\n    const attributes = Object.create(null);\r\n\r\n    // Get width/height\r\n    const inline = props.inline === true || props.inline === 'true' || props.inline === '1';\r\n\r\n    const box = {\r\n      left: item.left,\r\n      top: inline ? item.inlineTop : item.top,\r\n      width: item.width,\r\n      height: inline ? item.inlineHeight : item.height\r\n    };\r\n\r\n    // Transformations\r\n    ['hFlip', 'vFlip'].forEach(key => {\r\n      if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\r\n        transform[key] = !transform[key];\r\n      }\r\n    });\r\n    if (props.flip !== void 0) {\r\n      props.flip.toLowerCase().split(/[\\s,]+/).forEach(value => {\r\n        switch (value) {\r\n          case 'horizontal':\r\n            transform.hFlip = !transform.hFlip;\r\n            break;\r\n\r\n          case 'vertical':\r\n            transform.vFlip = !transform.vFlip;\r\n        }\r\n      });\r\n    }\r\n    if (props.rotate !== void 0) {\r\n      let value = props.rotate;\r\n      if (typeof value === 'number') {\r\n        transform.rotate += value;\r\n      } else if (typeof value === 'string') {\r\n        const units = value.replace(/^-?[0-9.]*/, '');\r\n        if (units === '') {\r\n          value = parseInt(value, 10);\r\n          if (!isNaN(value)) {\r\n            transform.rotate += value;\r\n          }\r\n        } else if (units !== value) {\r\n          let split: boolean | number = false;\r\n          switch (units) {\r\n            case '%':\r\n              // 25% -> 1, 50% -> 2, ...\r\n              split = 25;\r\n              break;\r\n\r\n            case 'deg':\r\n              // 90deg -> 1, 180deg -> 2, ...\r\n              split = 90;\r\n          }\r\n          if (split) {\r\n            value = parseInt(value.slice(0, value.length - units.length), 10);\r\n            if (!isNaN(value)) {\r\n              transform.rotate += Math.round(value / split);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Apply transformations to box\r\n    const transformations = [];\r\n    let tempValue;\r\n    if (transform.hFlip) {\r\n      if (transform.vFlip) {\r\n        transform.rotate += 2;\r\n      } else {\r\n        // Horizontal flip\r\n        transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\r\n        transformations.push('scale(-1 1)');\r\n        box.top = box.left = 0;\r\n      }\r\n    } else if (transform.vFlip) {\r\n      // Vertical flip\r\n      transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\r\n      transformations.push('scale(1 -1)');\r\n      box.top = box.left = 0;\r\n    }\r\n    switch (transform.rotate % 4) {\r\n      case 1:\r\n        // 90deg\r\n        tempValue = box.height / 2 + box.top;\r\n        transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\r\n        // swap width/height and x/y\r\n        if (box.left !== 0 || box.top !== 0) {\r\n          tempValue = box.left;\r\n          box.left = box.top;\r\n          box.top = tempValue;\r\n        }\r\n        if (box.width !== box.height) {\r\n          tempValue = box.width;\r\n          box.width = box.height;\r\n          box.height = tempValue;\r\n        }\r\n        break;\r\n\r\n      case 2:\r\n        // 180deg\r\n        transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\r\n        break;\r\n\r\n      case 3:\r\n        // 270deg\r\n        tempValue = box.width / 2 + box.left;\r\n        transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\r\n        // swap width/height and x/y\r\n        if (box.left !== 0 || box.top !== 0) {\r\n          tempValue = box.left;\r\n          box.left = box.top;\r\n          box.top = tempValue;\r\n        }\r\n        if (box.width !== box.height) {\r\n          tempValue = box.width;\r\n          box.width = box.height;\r\n          box.height = tempValue;\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Calculate dimensions\r\n    // Values for width/height: null = default, 'auto' = from svg, false = do not set\r\n    // Default: if both values aren't set, height defaults to '1em', width is calculated from height\r\n    const customWidth = props.width ? props.width : null;\r\n    let customHeight = props.height ? props.height : null;\r\n\r\n    let width;\r\n    let height;\r\n    if (customWidth === null && customHeight === null) {\r\n      customHeight = '1em';\r\n    }\r\n    if (customWidth !== null && customHeight !== null) {\r\n      width = customWidth;\r\n      height = customHeight;\r\n    } else if (customWidth !== null) {\r\n      width = customWidth;\r\n      height = SVG.calculateDimension(width, box.height / box.width);\r\n    } else {\r\n      height = customHeight;\r\n      width = SVG.calculateDimension(height, box.width / box.height);\r\n    }\r\n\r\n    if (width !== false) {\r\n      attributes.width = width === 'auto' ? box.width : width;\r\n    }\r\n    if (height !== false) {\r\n      attributes.height = height === 'auto' ? box.height : height;\r\n    }\r\n\r\n    // Add vertical-align for inline icon\r\n    if (inline && item.verticalAlign !== 0) {\r\n      style['vertical-align'] = item.verticalAlign + 'em';\r\n    }\r\n\r\n    // Check custom alignment\r\n    if (props.align !== void 0) {\r\n      props.align.toLowerCase().split(/[\\s,]+/).forEach(value => {\r\n        switch (value) {\r\n          case 'left':\r\n          case 'right':\r\n          case 'center':\r\n            align.horizontal = value;\r\n            break;\r\n\r\n          case 'top':\r\n          case 'bottom':\r\n          case 'middle':\r\n            align.vertical = value;\r\n            break;\r\n\r\n          case 'crop':\r\n            align.slice = true;\r\n            break;\r\n\r\n          case 'meet':\r\n            align.slice = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Generate viewBox and preserveAspectRatio attributes\r\n    attributes.preserveAspectRatio = getAlignment(align);\r\n    attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height;\r\n\r\n    // Generate body\r\n    let body = SVG.replaceIDs(item.body);\r\n\r\n    if (props.color !== void 0) {\r\n      body = body.replace(/currentColor/g, props.color);\r\n    }\r\n    if (transformations.length) {\r\n      body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\r\n    }\r\n    if (props.box === true || props.box === 'true' || props.box === '1') {\r\n      // Add transparent bounding box\r\n      // tslint:disable-next-line:max-line-length\r\n      body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\r\n    }\r\n\r\n    return {\r\n      attributes,\r\n      body,\r\n      style\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate SVG\r\n   */\r\n  getSVG(attributes: IconProps) {\r\n    const data = this.getAttributes(attributes);\r\n\r\n    let svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\r\n\r\n    // Add SVG attributes\r\n    Object.keys(data.attributes).forEach(attr => {\r\n      svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\r\n    });\r\n\r\n    // Add style with 360deg transformation to style to prevent subpixel rendering bug\r\n    svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\r\n    Object.keys(data.style).forEach(attr => {\r\n      svg += ' ' + attr + ': ' + data.style[attr] + ';';\r\n    });\r\n\r\n    svg += '\">';\r\n\r\n    svg += data.body + '</svg>';\r\n\r\n    return svg;\r\n  }\r\n}\r\n","import { Directive, HostBinding, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { normalize, SVG } from './svg';\n\n@Directive({\n  selector: 'ic-icon,[icIcon]'\n})\nexport class IconDirective implements OnInit, OnChanges {\n\n  @Input() icIcon: object;\n  @Input() icon: object;\n\n  // Optional Properties\n  @Input() color: string;\n\n  @Input()\n  @HostBinding('class.ic-inline')\n  inline: boolean;\n\n  @Input() box: boolean;\n\n  // Dimensions and Alignment\n  @Input()\n  @HostBinding('style.font-size')\n  size: string;\n\n  @Input() width = '1em';\n  @Input() height = '1em';\n  @Input() align: string;\n\n  // Transformations\n  @Input() hFlip: boolean;\n  @Input() vFlip: boolean;\n  @Input() flip: string;\n  @Input() rotate = 0;\n\n  @HostBinding('innerHTML')\n  iconHTML: SafeHtml;\n\n  constructor(private domSanitizer: DomSanitizer) { }\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      this.updateIcon();\n    }\n  }\n\n  updateIcon() {\n    if (typeof this.icon !== 'object' && typeof this.icIcon !== 'object') {\n      throw new Error('[Iconify]: No icon provided');\n    }\n\n    // Get SVG data\n    const svg = new SVG(normalize(this.icon || this.icIcon));\n\n    // Generate SVG\n    this.iconHTML = this.domSanitizer.bypassSecurityTrustHtml(svg.getSVG({\n      width: this.width,\n      height: this.height,\n      color: this.color,\n      inline: this.inline,\n      box: this.box,\n      align: this.align,\n      hFlip: this.hFlip,\n      vFlip: this.vFlip,\n      flip: this.flip,\n      rotate: this.rotate\n    }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IconDirective } from './icon.directive';\n\n\n@NgModule({\n  declarations: [IconDirective],\n  imports: [],\n  exports: [IconDirective]\n})\nexport class IconModule {\n}\n"],"names":[],"mappings":"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"}