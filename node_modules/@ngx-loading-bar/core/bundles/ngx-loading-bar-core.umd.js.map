{"version":3,"file":"ngx-loading-bar-core.umd.js.map","sources":["ng://@ngx-loading-bar/core/loading-bar.service.ts","ng://@ngx-loading-bar/core/loading-bar.component.ts","ng://@ngx-loading-bar/core/core.module.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingBarService implements OnDestroy {\n  readonly progress$ = (new Subject<number>()).pipe(debounceTime(0)) as Subject<number>;\n\n  private _pendingRequests = 0;\n  private _value = 0;\n  private _incTimeout: any;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  start(initialValue = 2) {\n    ++this._pendingRequests;\n    if (this._value === 0 || this._pendingRequests === 1) {\n      // Inserts the loading bar element into the dom, and sets it to 2%\n      this.set(this._pendingRequests === 1 && this._value > 0 ? this._value : initialValue);\n    }\n  }\n\n  stop() {\n    this.complete();\n    while (this._pendingRequests > 0) {\n      this.complete();\n    }\n  }\n\n  complete() {\n    if (this._pendingRequests === 0 && this._value === 0) {\n      return;\n    }\n\n    if (this._pendingRequests > 0) {\n      --this._pendingRequests;\n    }\n\n    if (this._pendingRequests === 0 || (this._pendingRequests === 0 && this._value > 0)) {\n      if (this._value !== 100) {\n        this.set(100);\n      }\n\n      // Attempt to aggregate any start/complete calls within 500ms:\n      setTimeout(() => this.set(0), 500);\n    }\n  }\n\n  /**\n   * Set the loading bar's width to a certain percent.\n   *\n   * @param n any value between 0 and 100\n   */\n  set(n) {\n    if (!isPlatformBrowser(this.platformId)) {\n      this._pendingRequests = 0;\n      return;\n    }\n\n    if (n === 0 && this._pendingRequests > 0) {\n      n = 2;\n    }\n\n    this._value = n;\n    this.progress$.next(n);\n\n    if (this._pendingRequests === 0) {\n      return;\n    }\n\n    // increment loadingbar to give the illusion that there is always\n    // progress but make sure to cancel the previous timeouts so we don't\n    // have multiple incs running at the same time.\n    clearTimeout(this._incTimeout);\n    if (this._value > 0 && this._value < 100) {\n      this._incTimeout = setTimeout(() => this.increment(), 250);\n    }\n  }\n\n  /**\n   * Increments the loading bar by a random amount\n   * but slows down as it progresses\n   */\n  increment(rnd = 0) {\n    if (rnd > 0) {\n      this.set(this._value + rnd);\n    }\n\n    const stat = this._value;\n    if (stat >= 0 && stat < 25) {\n      // Start out between 3 - 6% increments\n      rnd = (Math.random() * (5 - 3 + 1) + 3);\n    } else if (stat >= 25 && stat < 65) {\n      // increment between 0 - 3%\n      rnd = (Math.random() * 3);\n    } else if (stat >= 65 && stat < 90) {\n      // increment between 0 - 2%\n      rnd = (Math.random() * 2);\n    } else if (stat >= 90 && stat < 99) {\n      // finally, increment it .5 %\n      rnd = 0.5;\n    } else {\n      // after 99%, don't increment:\n      rnd = 0;\n    }\n\n    this.set(this._value + rnd);\n  }\n\n  ngOnDestroy() {\n    this.progress$.complete();\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { LoadingBarService } from './loading-bar.service';\n\n@Component({\n  selector: 'ngx-loading-bar',\n  template: `\n    <ng-container *ngIf=\"(value !== null ? value : loader.progress$|async) as progress\">\n      <div id=\"loading-bar-spinner\" *ngIf=\"includeSpinner\" [style.color]=\"color\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"spinner-icon\"></div>\n      </div>\n      <div id=\"loading-bar\" *ngIf=\"includeBar\" [style.color]=\"color\">\n        <div class=\"bar\" [style.background]=\"color\" [style.height]=\"height\" [style.width]=\"progress + '%'\">\n          <div class=\"peg\" [style.height]=\"height\"></div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.Emulated,\n  styleUrls: ['./loading-bar.component.scss'],\n  host: {\n    '[class.loading-bar-fixed]': 'fixed',\n  }\n})\nexport class LoadingBarComponent {\n  @Input() includeSpinner = true;\n  @Input() includeBar = true;\n  @Input() fixed = true;\n  @Input() color;\n  @Input() height;\n  @Input() diameter;\n  @Input() value = null;\n\n  constructor(public loader: LoadingBarService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingBarComponent } from './loading-bar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoadingBarComponent],\n  exports: [LoadingBarComponent],\n})\nexport class LoadingBarModule {}\n"],"names":["Subject","debounceTime","isPlatformBrowser","Injectable","Inject","PLATFORM_ID","Component","ViewEncapsulation","Input","NgModule","CommonModule"],"mappings":"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"}
