{"version":3,"file":"ngx-quill.js","sources":["ng://ngx-quill/src/quill-defaults.ts","ng://ngx-quill/src/quill-editor.interfaces.ts","ng://ngx-quill/src/quill-editor.component.ts","ng://ngx-quill/src/quill-view-html.component.ts","ng://ngx-quill/src/quill-view.component.ts","ng://ngx-quill/src/quill.module.ts","ng://ngx-quill/ngx-quill.ts"],"sourcesContent":["export const defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: [] },\n      { background: [] }\n    ], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n","import { InjectionToken } from '@angular/core'\n\nexport type QuillToolbarConfig = Array<Array< string | {\n  indent?: string\n  list?: string\n  direction?: string\n  header?: number | Array<boolean | number>\n  color?: string[] | string\n  background?: string[] | string\n  align?: string[] | string\n  script?: string\n  font?: string[] | string\n  size?: Array<boolean | string>\n}\n>>\n\nexport interface QuillModules {\n  [key: string]: any\n  clipboard?: {\n    matchers?: any[]\n    matchVisual?: boolean\n  } |Â boolean\n  history?: {\n    delay?: number\n    maxStack?: number\n    userOnly?: boolean\n  } |Â boolean\n  keyboard?: {\n    bindings?: any\n  } | boolean\n  syntax?: boolean\n  toolbar?: QuillToolbarConfig |Â string |Â {\n    container?: string | string[] | QuillToolbarConfig\n    handlers?: {\n      [key: string]: any\n    }\n  } |Â boolean\n}\n\nexport type QuillFormat = 'object' | 'json' | 'html' |Â 'text'\n\nexport interface QuillConfig {\n  bounds?: HTMLElement |Â string\n  debug?: 'error' | 'warn' | 'log' |Â false\n  format?: QuillFormat\n  formats?: string[]\n  modules?: QuillModules\n  placeholder?: string\n  readOnly?: boolean\n  scrollingContainer?: HTMLElement |Â string |Â null\n  theme?: string\n  // Custom Config to track all changes or only changes by 'user'\n  trackChanges?: 'user' | 'all'\n}\n\nexport const QUILL_CONFIG_TOKEN = new InjectionToken<QuillConfig>('config')\n","import {DOCUMENT, isPlatformServer} from '@angular/common'\nimport {DomSanitizer} from '@angular/platform-browser'\n\nimport {QUILL_CONFIG_TOKEN, QuillConfig, QuillFormat, QuillModules} from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport {ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms'\nimport {defaultModules} from './quill-defaults'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare const require: any\nlet Quill: any = null\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\nexport interface Range {\n  index: number\n  length: number\n}\n\nconst getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n})\nexport class QuillEditorComponent implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  static normalizeClassNames(classes: string): string[] {\n    const classList = classes.trim().split(' ')\n    return classList.reduce((prev: string[], cur: string) => {\n      const trimmed = cur.trim()\n      if (trimmed) {\n        prev.push(trimmed)\n      }\n\n      return prev\n    }, [])\n  }\n\n  quillEditor: any\n  editorElem: HTMLElement | undefined\n  content: any\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' |Â 'log' |Â 'error' |Â false\n  @Input() readOnly?: boolean\n  @Input() placeholder?: string\n  @Input() maxLength?: number\n  @Input() minLength?: number\n  @Input() required = false\n  @Input() formats?: string[] |Â null\n  @Input() customToolbarPosition: 'top' |Â 'bottom' = 'top'\n  @Input() sanitize = false\n  @Input() styles: any = null\n  @Input() strict = true\n  @Input() scrollingContainer?: HTMLElement | string | null\n  @Input() bounds?: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n  @Input() trackChanges?: 'user' |Â 'all'\n  @Input() preserveWhitespace = false\n  @Input() classes?: string\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n  @Output() onEditorChanged: EventEmitter<{\n    content: any\n    delta: any\n    editor: any\n    event: 'text-change'\n    html: string | null\n    oldDelta: any\n    source: string\n    text: string\n  } |Â {\n    editor: any\n    event: 'selection-change'\n    oldRange: Range | null\n    range: Range |Â null\n    source: string\n  }> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<{\n    content: any\n    delta: any\n    editor: any\n    html: string | null\n    oldDelta: any\n    source: string\n    text: string\n  }> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<{\n    editor: any\n    oldRange: Range | null\n    range: Range |Â null\n    source: string\n  }> = new EventEmitter()\n  @Output() onFocus: EventEmitter<{\n    editor: any\n    source: string\n  }> = new EventEmitter()\n  @Output() onBlur: EventEmitter<{\n    editor: any\n    source: string\n  }> = new EventEmitter()\n\n  disabled = false // used to store initial value before ViewInit\n\n  constructor(\n    @Inject(ElementRef) private elementRef: ElementRef,\n    private domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private doc: any,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  onModelChange(_modelValue?: any) {}\n  onModelTouched() {}\n\n  @Input()\n  valueGetter = (quillEditor: any, editorElement: HTMLElement): string | anyÂ  => {\n    let html: string | null = editorElement.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = null\n    }\n    let modelValue = html\n    const format = getFormat(this.format, this.config.format)\n\n    if (format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: any, value: any): any => {\n    const format = getFormat(this.format, this.config.format)\n    if (format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      Quill = require('quill')\n    }\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin',\n      this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-element]'\n    )\n\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-toolbar]'\n    )\n    const modules = Object.assign({}, this.modules || (this.config.modules ||Â defaultModules))\n\n    if (toolbarElem) {\n      modules.toolbar = toolbarElem\n    } else if (modules.toolbar === undefined) {\n      modules.toolbar = defaultModules.toolbar\n    }\n\n    let placeholder = this.placeholder !== undefined ? this.placeholder : this.config.placeholder\n    if (placeholder === undefined) {\n      placeholder = 'Insert text here ...'\n    }\n\n    if (this.styles) {\n      Object.keys(this.styles).forEach((key: string) => {\n        this.renderer.setStyle(this.editorElem, key, this.styles[key])\n      })\n    }\n\n    if (this.classes) {\n      this.addClasses(this.classes)\n    }\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds\n    if (!bounds) {\n      bounds = this.config.bounds ? this.config.bounds : this.doc.body\n    }\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let readOnly = this.readOnly\n    if (!readOnly && this.readOnly !== false) {\n      readOnly = this.config.readOnly !== undefined ? this.config.readOnly : false\n    }\n\n    let scrollingContainer = this.scrollingContainer\n    if (!scrollingContainer && this.scrollingContainer !== null) {\n      scrollingContainer = this.config.scrollingContainer === null ||Â this.config.scrollingContainer ? this.config.scrollingContainer : null\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ? [...this.config.formats] :Â (this.config.formats === null ? null : undefined)\n    }\n\n    this.quillEditor = new Quill(this.editorElem, {\n      bounds,\n      debug,\n      formats,\n      modules,\n      placeholder,\n      readOnly,\n      scrollingContainer,\n      strict: this.strict,\n      theme: this.theme || (this.config.theme ? this.config.theme : 'snow')\n    })\n\n    if (this.content) {\n      const format = getFormat(this.format, this.config.format)\n      if (format === 'object') {\n        this.quillEditor.setContents(this.content, 'silent')\n      } else if (format === 'text') {\n        this.quillEditor.setText(this.content, 'silent')\n      } else if (format === 'json') {\n        try {\n          this.quillEditor.setContents(JSON.parse(this.content), 'silent')\n        } catch (e) {\n          this.quillEditor.setText(this.content, 'silent')\n        }\n      } else {\n        if (this.sanitize) {\n          this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content)\n        }\n        const contents = this.quillEditor.clipboard.convert(this.content)\n        this.quillEditor.setContents(contents, 'silent')\n      }\n\n      this.quillEditor.history.clear()\n    }\n\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState()\n\n    // triggered if selection or text changed\n    this.quillEditor.on(\n      'editor-change',\n      this.editorChangeHandler\n    )\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on(\n      'selection-change',\n      this.selectionChangeHandler\n    )\n\n    // update model if text changes\n    this.quillEditor.on(\n      'text-change',\n      this.textChangeHandler\n    )\n\n    // trigger created in a timeout to avoid changed models after checked\n    // if you are using the editor api in created output to change the editor content\n    setTimeout(() => this.onEditorCreated.emit(this.quillEditor))\n  }\n\n  selectionChangeHandler = (range: Range |Â null, oldRange: Range | null, source: string) => {\n    this.zone.run(() => {\n      if (range === null) {\n        this.onBlur.emit({\n          editor: this.quillEditor,\n          source\n        })\n      } else if (oldRange === null) {\n        this.onFocus.emit({\n          editor: this.quillEditor,\n          source\n        })\n      }\n\n      this.onSelectionChanged.emit({\n        editor: this.quillEditor,\n        oldRange,\n        range,\n        source\n      })\n\n      if (!range && this.onModelTouched) {\n        this.onModelTouched()\n      }\n    })\n  }\n\n  textChangeHandler = (delta: any, oldDelta: any, source: string): void => {\n    // only emit changes emitted by user interactions\n\n    const text = this.quillEditor.getText()\n    const content = this.quillEditor.getContents()\n\n    let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n    if (html === '<p><br></p>' || html === '<div><br></div>') {\n      html = null\n    }\n\n    this.zone.run(() => {\n      const trackChanges = this.trackChanges ||Â this.config.trackChanges\n      if ((source === Quill.sources.USER || trackChanges && trackChanges === 'all') && this.onModelChange) {\n        this.onModelChange(\n          this.valueGetter(this.quillEditor, this.editorElem!)\n        )\n      }\n\n      this.onContentChanged.emit({\n        content,\n        delta,\n        editor: this.quillEditor,\n        html,\n        oldDelta,\n        source,\n        text\n      })\n    })\n  }\n\n  editorChangeHandler = (event: 'text-change' |Â 'selection-change', current: any |Â Range |Â null, old: any |Â Range | null, source: string): void => {\n    // only emit changes emitted by user interactions\n\n    if (event === 'text-change') {\n      const text = this.quillEditor.getText()\n      const content = this.quillEditor.getContents()\n\n      let html: string | null = this.editorElem!.querySelector('.ql-editor')!.innerHTML\n      if (html === '<p><br></p>' || html === '<div><br><div>') {\n        html = null\n      }\n\n      this.zone.run(() => {\n        this.onEditorChanged.emit({\n          content,\n          delta: current,\n          editor: this.quillEditor,\n          event,\n          html,\n          oldDelta: old,\n          source,\n          text\n        })\n      })\n    } else {\n      this.onEditorChanged.emit({\n        editor: this.quillEditor,\n        event,\n        oldRange: old,\n        range: current,\n        source\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.quillEditor) {\n      this.quillEditor.off('selection-change', this.selectionChangeHandler)\n      this.quillEditor.off('text-change', this.textChangeHandler)\n      this.quillEditor.off('editor-change', this.editorChangeHandler)\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    // tslint:disable:no-string-literal\n    if (changes['readOnly']) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue)\n    }\n    if (changes['placeholder']) {\n      this.quillEditor.root.dataset.placeholder =\n        changes['placeholder'].currentValue\n    }\n    if (changes['styles']) {\n      const currentStyling = changes['styles'].currentValue\n      const previousStyling = changes['styles'].previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key])\n        })\n      }\n    }\n    if (changes['classes']) {\n      const currentClasses = changes['classes'].currentValue\n      const previousClasses = changes['classes'].previousValue\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses)\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses)\n      }\n    }\n    // tslint:enable:no-string-literal\n  }\n\n  addClasses(classList: string): void {\n    QuillEditorComponent.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.addClass(this.editorElem, c)\n    })\n  }\n\n  removeClasses(classList: string): void {\n    QuillEditorComponent.normalizeClassNames(classList).forEach((c: string) => {\n      this.renderer.removeClass(this.editorElem, c)\n    })\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue\n    const format = getFormat(this.format, this.config.format)\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (format === 'text') {\n          this.quillEditor.setText(currentValue)\n        } else {\n          this.quillEditor.setContents(\n            this.valueSetter(this.quillEditor, this.content)\n          )\n        }\n        return\n      }\n      this.quillEditor.setText('')\n    }\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: (modelValue: any) => void): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const textLength = this.quillEditor.getText().trim().length\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\n\nimport {\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view-html',\n  styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n  template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n})\nexport class QuillViewHTMLComponent implements OnChanges {\n  innerHTML: SafeHtml = ''\n  themeClass = 'ql-snow'\n\n  @Input() content = ''\n  @Input() theme?: string\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.config.theme ? this.config.theme : 'snow')\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    } else if (!this.theme) {\n      const theme = this.config.theme ? this.config.theme : 'snow'\n      this.themeClass = `ql-${theme} ngx-quill-view-html`\n    }\n    if (changes.content) {\n      this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue)\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common'\n\nimport { QUILL_CONFIG_TOKEN, QuillConfig, QuillFormat, QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { CustomOption } from './quill-editor.component'\n\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare const require: any\nlet Quill: any = null\n\nconst getFormat = (format?: QuillFormat, configFormat?: QuillFormat): QuillFormat => {\n  const passedFormat = format || configFormat\n  return passedFormat || 'html'\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'quill-view',\n  styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n  template: `\n`\n})\nexport class QuillViewComponent implements AfterViewInit, OnChanges {\n  quillEditor: any\n  editorElem: HTMLElement | undefined\n\n  @Input() format?: 'object' | 'html' | 'text' | 'json'\n  @Input() theme?: string\n  @Input() modules?: QuillModules\n  @Input() debug?: 'warn' |Â 'log' |Â 'error' |Â false\n  @Input() formats?: string[] |Â null\n  @Input() strict = true\n  @Input() content: any\n  @Input() customOptions: CustomOption[] = []\n  @Input() preserveWhitespace = false\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(QUILL_CONFIG_TOKEN) private config: QuillConfig,\n    private renderer: Renderer2,\n    @Inject(ElementRef) private elementRef: ElementRef\n  ) {}\n\n  valueSetter = (quillEditor: any, value: any): any => {\n    const format = getFormat(this.format, this.config.format)\n    let content = value\n    if (format === 'html' ||Â format === 'text') {\n      content = quillEditor.clipboard.convert(value)\n    } else if (format === 'json') {\n      try {\n        content = JSON.parse(value)\n      } catch (e) {\n        content = [{ insert: value }]\n      }\n    }\n    quillEditor.setContents(content)\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.quillEditor) {\n      return\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue)\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      Quill = require('quill')\n    }\n\n    const modules = Object.assign({}, this.modules || (this.config.modules ||Â defaultModules))\n    modules.toolbar = false\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    let debug = this.debug\n    if (!debug && debug !== false && this.config.debug) {\n      debug = this.config.debug\n    }\n\n    let formats = this.formats\n    if (!formats && formats === undefined) {\n      formats = this.config.formats ? Object.assign({}, this.config.formats) :Â (this.config.formats === null ? null : undefined)\n    }\n    const theme = this.theme || (this.config.theme ? this.config.theme : 'snow')\n\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      'afterbegin',\n      this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>'\n    )\n\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-view-element]'\n    )\n\n    this.quillEditor = new Quill(this.editorElem, {\n      debug,\n      formats,\n      modules,\n      readOnly: true,\n      strict: this.strict,\n      theme\n    })\n\n    this.renderer.addClass(this.editorElem, 'ngx-quill-view')\n\n    if (this.content) {\n      this.valueSetter(this.quillEditor, this.content)\n    }\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { defaultModules } from './quill-defaults'\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QUILL_CONFIG_TOKEN, QuillConfig } from './quill-editor.interfaces'\nimport { QuillViewHTMLComponent } from './quill-view-html.component'\nimport { QuillViewComponent } from './quill-view.component'\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent,\n    QuillViewComponent,\n    QuillViewHTMLComponent\n  ],\n  exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n  imports: [CommonModule],\n  providers: []\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: QUILL_CONFIG_TOKEN,\n          useValue: config ||Â {Â modules: defaultModules }\n        }\n      ]\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate","tslib_1.__param","Quill","getFormat"],"mappings":"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"}