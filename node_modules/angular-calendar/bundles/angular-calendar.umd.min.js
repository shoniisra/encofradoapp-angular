!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("positioning"),require("rxjs"),require("rxjs/operators"),require("calendar-utils"),require("angular-draggable-droppable"),require("@angular/animations"),require("angular-resizable-element")):"function"==typeof define&&define.amd?define("angular-calendar",["exports","@angular/core","@angular/common","positioning","rxjs","rxjs/operators","calendar-utils","angular-draggable-droppable","@angular/animations","angular-resizable-element"],t):t((e=e||self)["angular-calendar"]={},e.ng.core,e.ng.common,e.positioning,e.rxjs,e.rxjs.operators,e.calendarUtils,e["angular-draggable-droppable"],e.ng.animations,e["angular-resizable-element"])}(this,function(e,t,n,a,i,r,o,l,s,d){"use strict";var p=function(e,t){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};var c=function(){return(c=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function u(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,i,r=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(l){i={error:l}}finally{try{a&&!a.done&&(n=r["return"])&&n.call(r)}finally{if(i)throw i.error}}return o}function v(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(u(arguments[t]));return e}var y=function(){function e(){this.trackByActionId=function(e,t){return t.id?t.id:t}}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-event-actions",template:'\n    <ng-template\n      #defaultTemplate\n      let-event="event"\n      let-trackByActionId="trackByActionId"\n    >\n      <span *ngIf="event.actions" class="cal-event-actions">\n        <a\n          class="cal-event-action"\n          href="javascript:;"\n          *ngFor="let action of event.actions; trackBy: trackByActionId"\n          (mwlClick)="action.onClick({ event: event })"\n          [ngClass]="action.cssClass"\n          [innerHtml]="action.label"\n        >\n        </a>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        event: event,\n        trackByActionId: trackByActionId\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={event:[{type:t.Input}],customTemplate:[{type:t.Input}]},e}(),h=function(){function e(){}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-event-title",template:'\n    <ng-template #defaultTemplate let-event="event" let-view="view">\n      <span\n        class="cal-event-title"\n        [innerHTML]="event.title | calendarEventTitle: view:event"\n      >\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        event: event,\n        view: view\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={event:[{type:t.Input}],customTemplate:[{type:t.Input}],view:[{type:t.Input}]},e}(),m=function(){function e(){}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-tooltip-window",template:'\n    <ng-template\n      #defaultTemplate\n      let-contents="contents"\n      let-placement="placement"\n      let-event="event"\n    >\n      <div class="cal-tooltip" [ngClass]="\'cal-tooltip-\' + placement">\n        <div class="cal-tooltip-arrow"></div>\n        <div class="cal-tooltip-inner" [innerHtml]="contents"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        contents: contents,\n        placement: placement,\n        event: event\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={contents:[{type:t.Input}],placement:[{type:t.Input}],event:[{type:t.Input}],customTemplate:[{type:t.Input}]},e}(),g=function(){function e(e,t,n,a,r,o){this.elementRef=e,this.injector=t,this.renderer=n,this.viewContainerRef=r,this.document=o,this.placement="auto",this.delay=null,this.cancelTooltipDelay$=new i.Subject,this.tooltipFactory=a.resolveComponentFactory(m)}return e.prototype.ngOnChanges=function(e){this.tooltipRef&&(e.contents||e.customTemplate||e.event)&&(this.tooltipRef.instance.contents=this.contents,this.tooltipRef.instance.customTemplate=this.customTemplate,this.tooltipRef.instance.event=this.event,this.tooltipRef.changeDetectorRef.markForCheck())},e.prototype.ngOnDestroy=function(){this.hide()},e.prototype.onMouseOver=function(){var e=this;(null===this.delay?i.of("now"):i.timer(this.delay)).pipe(r.takeUntil(this.cancelTooltipDelay$)).subscribe(function(){e.show()})},e.prototype.onMouseOut=function(){this.hide()},e.prototype.show=function(){var e=this;!this.tooltipRef&&this.contents&&(this.tooltipRef=this.viewContainerRef.createComponent(this.tooltipFactory,0,this.injector,[]),this.tooltipRef.instance.contents=this.contents,this.tooltipRef.instance.customTemplate=this.customTemplate,this.tooltipRef.instance.event=this.event,this.appendToBody&&this.document.body.appendChild(this.tooltipRef.location.nativeElement),requestAnimationFrame(function(){e.positionTooltip()}))},e.prototype.hide=function(){this.tooltipRef&&(this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView)),this.tooltipRef=null),this.cancelTooltipDelay$.next()},e.prototype.positionTooltip=function(e){this.tooltipRef&&(this.tooltipRef.changeDetectorRef.detectChanges(),this.tooltipRef.instance.placement=a.positionElements(this.elementRef.nativeElement,this.tooltipRef.location.nativeElement.children[0],this.placement,this.appendToBody),e!==this.tooltipRef.instance.placement&&this.positionTooltip(this.tooltipRef.instance.placement))},e.decorators=[{type:t.Directive,args:[{selector:"[mwlCalendarTooltip]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Injector},{type:t.Renderer2},{type:t.ComponentFactoryResolver},{type:t.ViewContainerRef},{type:undefined,decorators:[{type:t.Inject,args:[n.DOCUMENT]}]}]},e.propDecorators={contents:[{type:t.Input,args:["mwlCalendarTooltip"]}],placement:[{type:t.Input,args:["tooltipPlacement"]}],customTemplate:[{type:t.Input,args:["tooltipTemplate"]}],event:[{type:t.Input,args:["tooltipEvent"]}],appendToBody:[{type:t.Input,args:["tooltipAppendToBody"]}],delay:[{type:t.Input,args:["tooltipDelay"]}],onMouseOver:[{type:t.HostListener,args:["mouseenter"]}],onMouseOut:[{type:t.HostListener,args:["mouseleave"]}]},e}(),f=function(){return function(){}}(),D={Month:"month",Week:"week",Day:"day"},w=function(e){return o.validateEvents(e,function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return console.warn.apply(console,v(["angular-calendar"],e))})};function E(e,t){return Math.floor(e.left)<=Math.ceil(t.left)&&Math.floor(t.left)<=Math.ceil(e.right)&&Math.floor(e.left)<=Math.ceil(t.right)&&Math.floor(t.right)<=Math.ceil(e.right)&&Math.floor(e.top)<=Math.ceil(t.top)&&Math.floor(t.top)<=Math.ceil(e.bottom)&&Math.floor(e.top)<=Math.ceil(t.bottom)&&Math.floor(t.bottom)<=Math.ceil(e.bottom)}function k(e,t){return Math.round(e/t)*t}var T=function(e,t){return t.id?t.id:t},C=function(e,t){return t.date.toISOString()},I=function(e,t){return t.date.toISOString()},S=function(e,t){return t.segments[0].date.toISOString()},b=function(e,t){return t.event.id?t.event.id:t.event},A=60;function O(e,t,n,a){return k(e,a||n)*(A/(t*n))}function H(e,t){return A/(e*t)*t}function M(e,t,n){return t.end?t.end:e.addMinutes(t.start,n)}function z(e,t,n,a){for(var i=0,r=0,o=n<0?e.subDays:e.addDays,l=t;r<=Math.abs(n);){l=o(t,i);var s=e.getDay(l);-1===a.indexOf(s)&&r++,i++}return l}function R(e,t,n){var a=t||e;return n.start<=e&&e<=n.end||n.start<=a&&a<=n.end}function B(e,t,n,a){return e.dropData&&e.dropData.event&&(e.dropData.calendarId!==a||e.dropData.event.allDay&&!n||!e.dropData.event.allDay&&n)}function x(e,t,n,a,i){void 0===a&&(a=[]);var r=i?e.startOfDay(t):e.startOfWeek(t,{weekStartsOn:n});if(a.indexOf(e.getDay(r))>-1&&(r=e.subDays(z(e,r,1,a),1)),i)return{viewStart:r,viewEnd:o=e.endOfDay(z(e,r,i-1,a))};var o=e.endOfWeek(t,{weekStartsOn:n});return a.indexOf(e.getDay(o))>-1&&(o=e.addDays(z(e,o,-1,a),1)),{viewStart:r,viewEnd:o}}function W(e){var t=e.x,n=e.y;return Math.abs(t)>1||Math.abs(n)>1}var V=function(){function e(e){this.dateAdapter=e,this.excludeDays=[],this.viewDateChange=new t.EventEmitter}return e.prototype.onClick=function(){var e={day:this.dateAdapter.subDays,week:this.dateAdapter.subWeeks,month:this.dateAdapter.subMonths}[this.view];this.view===D.Day?this.viewDateChange.emit(z(this.dateAdapter,this.viewDate,-1,this.excludeDays)):this.view===D.Week&&this.daysInWeek?this.viewDateChange.emit(z(this.dateAdapter,this.viewDate,-this.daysInWeek,this.excludeDays)):this.viewDateChange.emit(e(this.viewDate,1))},e.decorators=[{type:t.Directive,args:[{selector:"[mwlCalendarPreviousView]"}]}],e.ctorParameters=function(){return[{type:f}]},e.propDecorators={view:[{type:t.Input}],viewDate:[{type:t.Input}],excludeDays:[{type:t.Input}],daysInWeek:[{type:t.Input}],viewDateChange:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]},e}(),P=function(){function e(e){this.dateAdapter=e,this.excludeDays=[],this.viewDateChange=new t.EventEmitter}return e.prototype.onClick=function(){var e={day:this.dateAdapter.addDays,week:this.dateAdapter.addWeeks,month:this.dateAdapter.addMonths}[this.view];this.view===D.Day?this.viewDateChange.emit(z(this.dateAdapter,this.viewDate,1,this.excludeDays)):this.view===D.Week&&this.daysInWeek?this.viewDateChange.emit(z(this.dateAdapter,this.viewDate,this.daysInWeek,this.excludeDays)):this.viewDateChange.emit(e(this.viewDate,1))},e.decorators=[{type:t.Directive,args:[{selector:"[mwlCalendarNextView]"}]}],e.ctorParameters=function(){return[{type:f}]},e.propDecorators={view:[{type:t.Input}],viewDate:[{type:t.Input}],excludeDays:[{type:t.Input}],daysInWeek:[{type:t.Input}],viewDateChange:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]},e}(),F=function(){function e(e){this.dateAdapter=e,this.viewDateChange=new t.EventEmitter}return e.prototype.onClick=function(){this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date))},e.decorators=[{type:t.Directive,args:[{selector:"[mwlCalendarToday]"}]}],e.ctorParameters=function(){return[{type:f}]},e.propDecorators={viewDate:[{type:t.Input}],viewDateChange:[{type:t.Output}],onClick:[{type:t.HostListener,args:["click"]}]},e}(),j=function(){function e(e){this.dateAdapter=e}return e.prototype.monthViewColumnHeader=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"EEEE",a)},e.prototype.monthViewDayNumber=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"d",a)},e.prototype.monthViewTitle=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"LLLL y",a)},e.prototype.weekViewColumnHeader=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"EEEE",a)},e.prototype.weekViewColumnSubHeader=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"MMM d",a)},e.prototype.weekViewTitle=function(e){var t=e.date,a=e.locale,i=e.weekStartsOn,r=e.excludeDays,o=e.daysInWeek,l=x(this.dateAdapter,t,i,r,o),s=l.viewStart,d=l.viewEnd,p=function(e,t){return n.formatDate(e,"MMM d"+(t?", yyyy":""),a)};return p(s,s.getUTCFullYear()!==d.getUTCFullYear())+" - "+p(d,!0)},e.prototype.weekViewHour=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"h a",a)},e.prototype.dayViewHour=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"h a",a)},e.prototype.dayViewTitle=function(e){var t=e.date,a=e.locale;return n.formatDate(t,"EEEE, MMMM d, y",a)},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:f}]},e}(),L=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return function(e,t){function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(n,e),n.decorators=[{type:t.Injectable}],n}(j),$=function(){function e(e,t){this.dateFormatter=e,this.locale=t}return e.prototype.transform=function(e,t,n,a,i,r){if(void 0===n&&(n=this.locale),void 0===a&&(a=0),void 0===i&&(i=[]),"undefined"==typeof this.dateFormatter[t]){var o=Object.getOwnPropertyNames(Object.getPrototypeOf(L.prototype)).filter(function(e){return"constructor"!==e});throw new Error(t+" is not a valid date formatter. Can only be one of "+o.join(", "))}return this.dateFormatter[t]({date:e,locale:n,weekStartsOn:a,excludeDays:i,daysInWeek:r})},e.decorators=[{type:t.Pipe,args:[{name:"calendarDate"}]}],e.ctorParameters=function(){return[{type:L},{type:String,decorators:[{type:t.Inject,args:[t.LOCALE_ID]}]}]},e}(),Y=function(){function e(){}return e.prototype.month=function(e,t){return e.title},e.prototype.monthTooltip=function(e,t){return e.title},e.prototype.week=function(e,t){return e.title},e.prototype.weekTooltip=function(e,t){return e.title},e.prototype.day=function(e,t){return e.title},e.prototype.dayTooltip=function(e,t){return e.title},e}(),_=function(){function e(e){this.calendarEventTitle=e}return e.prototype.transform=function(e,t,n){return this.calendarEventTitle[t](n,e)},e.decorators=[{type:t.Pipe,args:[{name:"calendarEventTitle"}]}],e.ctorParameters=function(){return[{type:Y}]},e}(),N="undefined"!=typeof window&&"undefined"!=typeof window.requestIdleCallback;var q=new Set,G="undefined"!=typeof window&&"undefined"!=typeof window.Hammer?"tap":"click",U=function(){function e(e,n,a,r){this.renderer=e,this.elm=n,this.document=a,this.zone=r,this.clickListenerDisabled=!1,this.click=new t.EventEmitter,this.destroy$=new i.Subject}return e.prototype.ngOnInit=function(){var e=this;this.clickListenerDisabled||(this.renderer.setAttribute(this.elm.nativeElement,"data-calendar-clickable","true"),q.add(this.elm.nativeElement),new i.Observable(function(e){if(N){var t=window.requestIdleCallback(function(){e.next(),e.complete()});return function(){window.cancelIdleCallback(t)}}var n=setTimeout(function(){e.next(),e.complete()},1);return function(){clearTimeout(n)}}).pipe(r.switchMapTo(this.listen()),r.takeUntil(this.destroy$)).subscribe(function(t){for(var n=t.target;!q.has(n)&&n!==e.document.body;)n=n.parentElement;e.elm.nativeElement===n&&e.zone.run(function(){e.click.next(t)})}))},e.prototype.ngOnDestroy=function(){this.destroy$.next(),q["delete"](this.elm.nativeElement)},e.prototype.listen=function(){var e=this;return new i.Observable(function(t){return e.renderer.listen(e.elm.nativeElement,G,function(e){t.next(e)})})},e.decorators=[{type:t.Directive,args:[{selector:"[mwlClick]"}]}],e.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:undefined,decorators:[{type:t.Inject,args:[n.DOCUMENT]}]},{type:t.NgZone}]},e.propDecorators={clickListenerDisabled:[{type:t.Input}],click:[{type:t.Output,args:["mwlClick"]}]},e}(),K=function(){function e(e){this.dateAdapter=e}return e.prototype.getMonthView=function(e){return o.getMonthView(this.dateAdapter,e)},e.prototype.getWeekViewHeader=function(e){return o.getWeekViewHeader(this.dateAdapter,e)},e.prototype.getWeekView=function(e){return o.getWeekView(this.dateAdapter,e)},e.prototype.getDayView=function(e){return o.getDayView(this.dateAdapter,e)},e.prototype.getDayViewHourGrid=function(e){return o.getDayViewHourGrid(this.dateAdapter,e)},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:f}]},e}(),Z=new t.InjectionToken("Moment"),J=function(){function e(e,t){this.moment=e,this.dateAdapter=t}return e.prototype.monthViewColumnHeader=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("dddd")},e.prototype.monthViewDayNumber=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("D")},e.prototype.monthViewTitle=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("MMMM YYYY")},e.prototype.weekViewColumnHeader=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("dddd")},e.prototype.weekViewColumnSubHeader=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("MMM D")},e.prototype.weekViewTitle=function(e){var t=this,n=e.date,a=e.locale,i=e.weekStartsOn,r=e.excludeDays,o=e.daysInWeek,l=x(this.dateAdapter,n,i,r,o),s=l.viewStart,d=l.viewEnd,p=function(e,n){return t.moment(e).locale(a).format("MMM D"+(n?", YYYY":""))};return p(s,s.getUTCFullYear()!==d.getUTCFullYear())+" - "+p(d,!0)},e.prototype.weekViewHour=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("ha")},e.prototype.dayViewHour=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("ha")},e.prototype.dayViewTitle=function(e){var t=e.date,n=e.locale;return this.moment(t).locale(n).format("dddd, D MMMM, YYYY")},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:t.Inject,args:[Z]}]},{type:f}]},e}(),Q=function(){function e(e){this.dateAdapter=e}return e.prototype.monthViewColumnHeader=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{weekday:"long"}).format(t)},e.prototype.monthViewDayNumber=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{day:"numeric"}).format(t)},e.prototype.monthViewTitle=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{year:"numeric",month:"long"}).format(t)},e.prototype.weekViewColumnHeader=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{weekday:"long"}).format(t)},e.prototype.weekViewColumnSubHeader=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{day:"numeric",month:"short"}).format(t)},e.prototype.weekViewTitle=function(e){var t=e.date,n=e.locale,a=e.weekStartsOn,i=e.excludeDays,r=e.daysInWeek,o=x(this.dateAdapter,t,a,i,r),l=o.viewStart,s=o.viewEnd,d=function(e,t){return new Intl.DateTimeFormat(n,{day:"numeric",month:"short",year:t?"numeric":undefined}).format(e)};return d(l,l.getUTCFullYear()!==s.getUTCFullYear())+" - "+d(s,!0)},e.prototype.weekViewHour=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{hour:"numeric"}).format(t)},e.prototype.dayViewHour=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{hour:"numeric"}).format(t)},e.prototype.dayViewTitle=function(e){var t=e.date,n=e.locale;return new Intl.DateTimeFormat(n,{day:"numeric",month:"long",year:"numeric",weekday:"long"}).format(t)},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:f}]},e}(),X={Drag:"drag",Drop:"drop",Resize:"resize"},ee=function(){function e(){}return e.forRoot=function(t,n){return void 0===n&&(n={}),{ngModule:e,providers:[t,n.eventTitleFormatter||Y,n.dateFormatter||L,n.utils||K]}},e.decorators=[{type:t.NgModule,args:[{declarations:[y,h,m,g,V,P,F,$,_,U],imports:[n.CommonModule],exports:[y,h,m,g,V,P,F,$,_,U],entryComponents:[m]}]}],e}(),te=function(){function e(e,n,a,i){var r=this;this.cdr=e,this.utils=n,this.dateAdapter=i,this.events=[],this.excludeDays=[],this.activeDayIsOpen=!1,this.tooltipPlacement="auto",this.tooltipAppendToBody=!0,this.tooltipDelay=null,this.beforeViewRender=new t.EventEmitter,this.dayClicked=new t.EventEmitter,this.eventClicked=new t.EventEmitter,this.columnHeaderClicked=new t.EventEmitter,this.eventTimesChanged=new t.EventEmitter,this.trackByRowOffset=function(e,t){return r.view.days.slice(t,r.view.totalDaysVisibleInWeek).map(function(e){return e.date.toISOString()}).join("-")},this.trackByDate=function(e,t){return t.date.toISOString()},this.locale=a}return e.prototype.ngOnInit=function(){var e=this;this.refresh&&(this.refreshSubscription=this.refresh.subscribe(function(){e.refreshAll(),e.cdr.markForCheck()}))},e.prototype.ngOnChanges=function(e){var t=e.viewDate||e.excludeDays||e.weekendDays,n=e.viewDate||e.events||e.excludeDays||e.weekendDays;t&&this.refreshHeader(),e.events&&w(this.events),n&&this.refreshBody(),(t||n)&&this.emitBeforeViewRender(),(e.activeDayIsOpen||e.viewDate||e.events||e.excludeDays||e.activeDay)&&this.checkActiveDayIsOpen()},e.prototype.ngOnDestroy=function(){this.refreshSubscription&&this.refreshSubscription.unsubscribe()},e.prototype.toggleDayHighlight=function(e,t){this.view.days.forEach(function(n){t&&n.events.indexOf(e)>-1?n.backgroundColor=e.color&&e.color.secondary||"#D1E8FF":delete n.backgroundColor})},e.prototype.eventDropped=function(e,t,n){if(e!==n){var a=this.dateAdapter.getYear(e.date),i=this.dateAdapter.getMonth(e.date),r=this.dateAdapter.getDate(e.date),o=this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(t.start,a),i),r),l=void 0;if(t.end){var s=this.dateAdapter.differenceInSeconds(o,t.start);l=this.dateAdapter.addSeconds(t.end,s)}this.eventTimesChanged.emit({event:t,newStart:o,newEnd:l,day:e,type:X.Drop})}},e.prototype.refreshHeader=function(){this.columnHeaders=this.utils.getWeekViewHeader({viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,weekendDays:this.weekendDays})},e.prototype.refreshBody=function(){this.view=this.utils.getMonthView({events:this.events,viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,weekendDays:this.weekendDays})},e.prototype.checkActiveDayIsOpen=function(){var e=this;if(!0===this.activeDayIsOpen){var t=this.activeDay||this.viewDate;this.openDay=this.view.days.find(function(n){return e.dateAdapter.isSameDay(n.date,t)});var n=this.view.days.indexOf(this.openDay);this.openRowIndex=Math.floor(n/this.view.totalDaysVisibleInWeek)*this.view.totalDaysVisibleInWeek}else this.openRowIndex=null,this.openDay=null},e.prototype.refreshAll=function(){this.refreshHeader(),this.refreshBody(),this.emitBeforeViewRender(),this.checkActiveDayIsOpen()},e.prototype.emitBeforeViewRender=function(){this.columnHeaders&&this.view&&this.beforeViewRender.emit({header:this.columnHeaders,body:this.view.days,period:this.view.period})},e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-month-view",template:'\n    <div class="cal-month-view">\n      <mwl-calendar-month-view-header\n        [days]="columnHeaders"\n        [locale]="locale"\n        (columnHeaderClicked)="columnHeaderClicked.emit($event)"\n        [customTemplate]="headerTemplate"\n      >\n        >\n      </mwl-calendar-month-view-header>\n      <div class="cal-days">\n        <div\n          *ngFor="let rowIndex of view.rowOffsets; trackBy: trackByRowOffset"\n        >\n          <div class="cal-cell-row">\n            <mwl-calendar-month-cell\n              *ngFor="\n                let day of view.days\n                  | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek;\n                trackBy: trackByDate\n              "\n              [ngClass]="day?.cssClass"\n              [day]="day"\n              [openDay]="openDay"\n              [locale]="locale"\n              [tooltipPlacement]="tooltipPlacement"\n              [tooltipAppendToBody]="tooltipAppendToBody"\n              [tooltipTemplate]="tooltipTemplate"\n              [tooltipDelay]="tooltipDelay"\n              [customTemplate]="cellTemplate"\n              [ngStyle]="{ backgroundColor: day.backgroundColor }"\n              (mwlClick)="dayClicked.emit({ day: day })"\n              [clickListenerDisabled]="dayClicked.observers.length === 0"\n              (highlightDay)="toggleDayHighlight($event.event, true)"\n              (unhighlightDay)="toggleDayHighlight($event.event, false)"\n              mwlDroppable\n              dragOverClass="cal-drag-over"\n              (drop)="\n                eventDropped(\n                  day,\n                  $event.dropData.event,\n                  $event.dropData.draggedFrom\n                )\n              "\n              (eventClicked)="eventClicked.emit({ event: $event.event })"\n            >\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]="openRowIndex === rowIndex"\n            [events]="openDay?.events"\n            [customTemplate]="openDayEventsTemplate"\n            [eventTitleTemplate]="eventTitleTemplate"\n            [eventActionsTemplate]="eventActionsTemplate"\n            (eventClicked)="eventClicked.emit({ event: $event.event })"\n            mwlDroppable\n            dragOverClass="cal-drag-over"\n            (drop)="\n              eventDropped(\n                openDay,\n                $event.dropData.event,\n                $event.dropData.draggedFrom\n              )\n            "\n          >\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  '}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:K},{type:String,decorators:[{type:t.Inject,args:[t.LOCALE_ID]}]},{type:f}]},e.propDecorators={viewDate:[{type:t.Input}],events:[{type:t.Input}],excludeDays:[{type:t.Input}],activeDayIsOpen:[{type:t.Input}],activeDay:[{type:t.Input}],refresh:[{type:t.Input}],locale:[{type:t.Input}],tooltipPlacement:[{type:t.Input}],tooltipTemplate:[{type:t.Input}],tooltipAppendToBody:[{type:t.Input}],tooltipDelay:[{type:t.Input}],weekStartsOn:[{type:t.Input}],headerTemplate:[{type:t.Input}],cellTemplate:[{type:t.Input}],openDayEventsTemplate:[{type:t.Input}],eventTitleTemplate:[{type:t.Input}],eventActionsTemplate:[{type:t.Input}],weekendDays:[{type:t.Input}],beforeViewRender:[{type:t.Output}],dayClicked:[{type:t.Output}],eventClicked:[{type:t.Output}],columnHeaderClicked:[{type:t.Output}],eventTimesChanged:[{type:t.Output}]},e}(),ne=function(){function e(){this.columnHeaderClicked=new t.EventEmitter,this.trackByWeekDayHeaderDate=C}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-month-view-header",template:'\n    <ng-template\n      #defaultTemplate\n      let-days="days"\n      let-locale="locale"\n      let-trackByWeekDayHeaderDate="trackByWeekDayHeaderDate"\n    >\n      <div class="cal-cell-row cal-header">\n        <div\n          class="cal-cell"\n          *ngFor="let day of days; trackBy: trackByWeekDayHeaderDate"\n          [class.cal-past]="day.isPast"\n          [class.cal-today]="day.isToday"\n          [class.cal-future]="day.isFuture"\n          [class.cal-weekend]="day.isWeekend"\n          (click)="columnHeaderClicked.emit(day.day)"\n          [ngClass]="day.cssClass"\n        >\n          {{ day.date | calendarDate: \'monthViewColumnHeader\':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        days: days,\n        locale: locale,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={days:[{type:t.Input}],locale:[{type:t.Input}],customTemplate:[{type:t.Input}],columnHeaderClicked:[{type:t.Output}]},e}(),ae=function(){function e(){this.highlightDay=new t.EventEmitter,this.unhighlightDay=new t.EventEmitter,this.eventClicked=new t.EventEmitter,this.trackByEventId=T,this.validateDrag=W}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-month-cell",template:'\n    <ng-template\n      #defaultTemplate\n      let-day="day"\n      let-openDay="openDay"\n      let-locale="locale"\n      let-tooltipPlacement="tooltipPlacement"\n      let-highlightDay="highlightDay"\n      let-unhighlightDay="unhighlightDay"\n      let-eventClicked="eventClicked"\n      let-tooltipTemplate="tooltipTemplate"\n      let-tooltipAppendToBody="tooltipAppendToBody"\n      let-tooltipDelay="tooltipDelay"\n      let-trackByEventId="trackByEventId"\n      let-validateDrag="validateDrag"\n    >\n      <div class="cal-cell-top">\n        <span class="cal-day-badge" *ngIf="day.badgeTotal > 0">{{\n          day.badgeTotal\n        }}</span>\n        <span class="cal-day-number">{{\n          day.date | calendarDate: \'monthViewDayNumber\':locale\n        }}</span>\n      </div>\n      <div class="cal-events" *ngIf="day.events.length > 0">\n        <div\n          class="cal-event"\n          *ngFor="let event of day.events; trackBy: trackByEventId"\n          [ngStyle]="{ backgroundColor: event.color?.primary }"\n          [ngClass]="event?.cssClass"\n          (mouseenter)="highlightDay.emit({ event: event })"\n          (mouseleave)="unhighlightDay.emit({ event: event })"\n          [mwlCalendarTooltip]="\n            event.title | calendarEventTitle: \'monthTooltip\':event\n          "\n          [tooltipPlacement]="tooltipPlacement"\n          [tooltipEvent]="event"\n          [tooltipTemplate]="tooltipTemplate"\n          [tooltipAppendToBody]="tooltipAppendToBody"\n          [tooltipDelay]="tooltipDelay"\n          mwlDraggable\n          [class.cal-draggable]="event.draggable"\n          dragActiveClass="cal-drag-active"\n          [dropData]="{ event: event, draggedFrom: day }"\n          [dragAxis]="{ x: event.draggable, y: event.draggable }"\n          [validateDrag]="validateDrag"\n          (mwlClick)="eventClicked.emit({ event: event })"\n        ></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDelay: tooltipDelay,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }"\n    >\n    </ng-template>\n  ',host:{"class":"cal-cell cal-day-cell","[class.cal-past]":"day.isPast","[class.cal-today]":"day.isToday","[class.cal-future]":"day.isFuture","[class.cal-weekend]":"day.isWeekend","[class.cal-in-month]":"day.inMonth","[class.cal-out-month]":"!day.inMonth","[class.cal-has-events]":"day.events.length > 0","[class.cal-open]":"day === openDay","[class.cal-event-highlight]":"!!day.backgroundColor"}}]}],e.propDecorators={day:[{type:t.Input}],openDay:[{type:t.Input}],locale:[{type:t.Input}],tooltipPlacement:[{type:t.Input}],tooltipAppendToBody:[{type:t.Input}],customTemplate:[{type:t.Input}],tooltipTemplate:[{type:t.Input}],tooltipDelay:[{type:t.Input}],highlightDay:[{type:t.Output}],unhighlightDay:[{type:t.Output}],eventClicked:[{type:t.Output}]},e}(),ie=s.trigger("collapse",[s.state("void",s.style({height:0,overflow:"hidden","padding-top":0,"padding-bottom":0})),s.state("*",s.style({height:"*",overflow:"hidden","padding-top":"*","padding-bottom":"*"})),s.transition("* => void",s.animate("150ms ease-out")),s.transition("void => *",s.animate("150ms ease-in"))]),re=function(){function e(){this.isOpen=!1,this.eventClicked=new t.EventEmitter,this.trackByEventId=T,this.validateDrag=W}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-open-day-events",template:'\n    <ng-template\n      #defaultTemplate\n      let-events="events"\n      let-eventClicked="eventClicked"\n      let-isOpen="isOpen"\n      let-trackByEventId="trackByEventId"\n      let-validateDrag="validateDrag"\n    >\n      <div class="cal-open-day-events" [@collapse] *ngIf="isOpen">\n        <div\n          *ngFor="let event of events; trackBy: trackByEventId"\n          [ngClass]="event?.cssClass"\n          mwlDraggable\n          [class.cal-draggable]="event.draggable"\n          dragActiveClass="cal-drag-active"\n          [dropData]="{ event: event }"\n          [dragAxis]="{ x: event.draggable, y: event.draggable }"\n          [validateDrag]="validateDrag"\n        >\n          <span\n            class="cal-event"\n            [ngStyle]="{ backgroundColor: event.color?.primary }"\n          >\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]="event"\n            [customTemplate]="eventTitleTemplate"\n            view="month"\n            (mwlClick)="eventClicked.emit({ event: event })"\n          >\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]="event"\n            [customTemplate]="eventActionsTemplate"\n          >\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }"\n    >\n    </ng-template>\n  ',animations:[ie]}]}],e.propDecorators={isOpen:[{type:t.Input}],events:[{type:t.Input}],customTemplate:[{type:t.Input}],eventTitleTemplate:[{type:t.Input}],eventActionsTemplate:[{type:t.Input}],eventClicked:[{type:t.Output}]},e}(),oe=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,l.DragAndDropModule,ee],declarations:[te,ae,re,ne],exports:[l.DragAndDropModule,te,ae,re,ne]}]}],e}(),le=function(){function e(e,t){this.dragContainerElement=e,this.startPosition=t.getBoundingClientRect()}return e.prototype.validateDrag=function(e){var t=e.x,n=e.y,a=e.snapDraggedEvents,i=e.dragAlreadyMoved,r=e.transform;if(a){var o=Object.assign({},this.startPosition,{left:this.startPosition.left+r.x,right:this.startPosition.right+r.x,top:this.startPosition.top+r.y,bottom:this.startPosition.bottom+r.y});return(W({x:t,y:n})||i)&&E(this.dragContainerElement.getBoundingClientRect(),o)}return W({x:t,y:n})||i},e}(),se=function(){function e(e,t){this.resizeContainerElement=e,this.minWidth=t}return e.prototype.validateResize=function(e){var t=e.rectangle;return!(this.minWidth&&Math.ceil(t.width)<Math.ceil(this.minWidth))&&E(this.resizeContainerElement.getBoundingClientRect(),t)},e}(),de=function(){function e(e,n,a,i){this.cdr=e,this.utils=n,this.dateAdapter=i,this.events=[],this.excludeDays=[],this.tooltipPlacement="auto",this.tooltipAppendToBody=!0,this.tooltipDelay=null,this.precision="days",this.snapDraggedEvents=!0,this.hourSegments=2,this.hourSegmentHeight=30,this.dayStartHour=0,this.dayStartMinute=0,this.dayEndHour=23,this.dayEndMinute=59,this.dayHeaderClicked=new t.EventEmitter,this.eventClicked=new t.EventEmitter,this.eventTimesChanged=new t.EventEmitter,this.beforeViewRender=new t.EventEmitter,this.hourSegmentClicked=new t.EventEmitter,this.allDayEventResizes=new Map,this.timeEventResizes=new Map,this.eventDragEnter=0,this.dragActive=!1,this.dragAlreadyMoved=!1,this.calendarId=Symbol("angular calendar week view id"),this.trackByWeekDayHeaderDate=C,this.trackByHourSegment=I,this.trackByHour=S,this.trackByDayOrWeekEvent=b,this.trackByHourColumn=function(e,t){return t.hours[0]?t.hours[0].segments[0].date.toISOString():t},this.trackById=function(e,t){return t.id},this.locale=a}return e.prototype.ngOnInit=function(){var e=this;this.refresh&&(this.refreshSubscription=this.refresh.subscribe(function(){e.refreshAll(),e.cdr.markForCheck()}))},e.prototype.ngOnChanges=function(e){var t=e.viewDate||e.excludeDays||e.weekendDays||e.daysInWeek||e.weekStartsOn,n=e.viewDate||e.dayStartHour||e.dayStartMinute||e.dayEndHour||e.dayEndMinute||e.hourSegments||e.weekStartsOn||e.weekendDays||e.excludeDays||e.hourSegmentHeight||e.events||e.daysInWeek;t&&this.refreshHeader(),e.events&&w(this.events),n&&this.refreshBody(),(t||n)&&this.emitBeforeViewRender()},e.prototype.ngOnDestroy=function(){this.refreshSubscription&&this.refreshSubscription.unsubscribe()},e.prototype.resizeStarted=function(e,t){this.dayColumnWidth=this.getDayColumnWidth(e);var n=new se(e,t);this.validateResize=function(e){var t=e.rectangle;return n.validateResize({rectangle:t})},this.cdr.markForCheck()},e.prototype.timeEventResizeStarted=function(e,t,n){this.timeEventResizes.set(t.event,n),this.resizeStarted(e)},e.prototype.timeEventResizing=function(e,t){var n=this;this.timeEventResizes.set(e.event,t);var a=new Map,i=v(this.events);this.timeEventResizes.forEach(function(e,t){var r=n.getTimeEventResizedDates(t,e),o=c({},t,r);a.set(o,t);var l=i.indexOf(t);i[l]=o}),this.restoreOriginalEvents(i,a)},e.prototype.timeEventResizeEnded=function(e){this.view=this.getWeekView(this.events);var t=this.timeEventResizes.get(e.event);if(t){this.timeEventResizes["delete"](e.event);var n=this.getTimeEventResizedDates(e.event,t);this.eventTimesChanged.emit({newStart:n.start,newEnd:n.end,event:e.event,type:X.Resize})}},e.prototype.allDayEventResizeStarted=function(e,t,n){this.allDayEventResizes.set(t,{originalOffset:t.offset,originalSpan:t.span,edge:"undefined"!=typeof n.edges.left?"left":"right"}),this.resizeStarted(e,this.getDayColumnWidth(e))},e.prototype.allDayEventResizing=function(e,t,n){var a=this.allDayEventResizes.get(e);if("undefined"!=typeof t.edges.left){var i=Math.round(+t.edges.left/n);e.offset=a.originalOffset+i,e.span=a.originalSpan-i}else if("undefined"!=typeof t.edges.right){i=Math.round(+t.edges.right/n);e.span=a.originalSpan+i}},e.prototype.allDayEventResizeEnded=function(e){var t=this.allDayEventResizes.get(e);if(t){var n="left"===t.edge,a=void 0;a=n?e.offset-t.originalOffset:e.span-t.originalSpan,e.offset=t.originalOffset,e.span=t.originalSpan;var i=e.event.start,r=e.event.end||e.event.start;n?i=z(this.dateAdapter,i,a,this.excludeDays):r=z(this.dateAdapter,r,a,this.excludeDays),this.eventTimesChanged.emit({newStart:i,newEnd:r,event:e.event,type:X.Resize}),this.allDayEventResizes["delete"](e)}},e.prototype.getDayColumnWidth=function(e){return Math.floor(e.offsetWidth/this.days.length)},e.prototype.eventDropped=function(e,t,n){B(e,0,n,this.calendarId)&&this.eventTimesChanged.emit({type:X.Drop,event:e.dropData.event,newStart:t,allDay:n})},e.prototype.dragStarted=function(e,t,n){var a=this;this.dayColumnWidth=this.getDayColumnWidth(e);var i=new le(e,t);this.validateDrag=function(e){var t=e.x,n=e.y,r=e.transform;return 0===a.allDayEventResizes.size&&0===a.timeEventResizes.size&&i.validateDrag({x:t,y:n,snapDraggedEvents:a.snapDraggedEvents,dragAlreadyMoved:a.dragAlreadyMoved,transform:r})},this.dragActive=!0,this.dragAlreadyMoved=!1,this.eventDragEnter=0,!this.snapDraggedEvents&&n&&this.view.hourColumns.forEach(function(e){var t=e.events.find(function(e){return e.event===n.event&&e!==n});t&&(t.width=0,t.height=0)}),this.cdr.markForCheck()},e.prototype.dragMove=function(e,t){if(this.snapDraggedEvents){var n=this.getDragMovedEventTimes(e,t,this.dayColumnWidth,!0),a=e.event,i=c({},a,n),r=this.events.map(function(e){return e===a?i:e});this.restoreOriginalEvents(r,new Map([[i,a]]))}this.dragAlreadyMoved=!0},e.prototype.allDayEventDragMove=function(){this.dragAlreadyMoved=!0},e.prototype.dragEnded=function(e,t,n,a){void 0===a&&(a=!1),this.view=this.getWeekView(this.events),this.dragActive=!1;var i=this.getDragMovedEventTimes(e,t,n,a),r=i.start,o=i.end;this.eventDragEnter>0&&R(r,o,this.view.period)&&this.eventTimesChanged.emit({newStart:r,newEnd:o,event:e.event,type:X.Drag,allDay:!a})},e.prototype.refreshHeader=function(){this.days=this.utils.getWeekViewHeader(c({viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,weekendDays:this.weekendDays},x(this.dateAdapter,this.viewDate,this.weekStartsOn,this.excludeDays,this.daysInWeek)))},e.prototype.refreshBody=function(){this.view=this.getWeekView(this.events)},e.prototype.refreshAll=function(){this.refreshHeader(),this.refreshBody(),this.emitBeforeViewRender()},e.prototype.emitBeforeViewRender=function(){this.days&&this.view&&this.beforeViewRender.emit(c({header:this.days},this.view))},e.prototype.getWeekView=function(e){return this.utils.getWeekView(c({events:e,viewDate:this.viewDate,weekStartsOn:this.weekStartsOn,excluded:this.excludeDays,precision:this.precision,absolutePositionedEvents:!0,hourSegments:this.hourSegments,dayStart:{hour:this.dayStartHour,minute:this.dayStartMinute},dayEnd:{hour:this.dayEndHour,minute:this.dayEndMinute},segmentHeight:this.hourSegmentHeight,weekendDays:this.weekendDays},x(this.dateAdapter,this.viewDate,this.weekStartsOn,this.excludeDays,this.daysInWeek)))},e.prototype.getDragMovedEventTimes=function(e,t,n,a){var i,r=k(t.x,n)/n,o=a?O(t.y,this.hourSegments,this.hourSegmentHeight,this.eventSnapSize):0,l=this.dateAdapter.addMinutes(z(this.dateAdapter,e.event.start,r,this.excludeDays),o);return e.event.end&&(i=this.dateAdapter.addMinutes(z(this.dateAdapter,e.event.end,r,this.excludeDays),o)),{start:l,end:i}},e.prototype.restoreOriginalEvents=function(e,t){var n=this.view;this.view=this.getWeekView(e);var a=e.filter(function(e){return t.has(e)});this.view.hourColumns.forEach(function(e,i){n.hourColumns[i].hours.forEach(function(t,n){t.segments.forEach(function(t,a){e.hours[n].segments[a].cssClass=t.cssClass})}),a.forEach(function(n){var a=t.get(n),i=e.events.find(function(e){return e.event===n});i?i.event=a:e.events.push({event:a,left:0,top:0,height:0,width:0,startsBeforeDay:!1,endsAfterDay:!1})})}),t.clear()},e.prototype.getTimeEventResizedDates=function(e,t){var n=H(this.hourSegments,this.hourSegmentHeight),a={start:e.start,end:M(this.dateAdapter,e,n)},i=(e.end,function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(a=Object.getOwnPropertySymbols(e);i<a.length;i++)t.indexOf(a[i])<0&&Object.prototype.propertyIsEnumerable.call(e,a[i])&&(n[a[i]]=e[a[i]])}return n}(e,["end"])),r={start:this.dateAdapter.addMinutes(a.end,-1*n),end:M(this.dateAdapter,i,n)};if("undefined"!=typeof t.edges.left){var o=Math.round(+t.edges.left/this.dayColumnWidth),l=z(this.dateAdapter,a.start,o,this.excludeDays);a.start=l<r.start?l:r.start}else if("undefined"!=typeof t.edges.right){o=Math.round(+t.edges.right/this.dayColumnWidth);var s=z(this.dateAdapter,a.end,o,this.excludeDays);a.end=s>r.end?s:r.end}if("undefined"!=typeof t.edges.top){var d=O(t.edges.top,this.hourSegments,this.hourSegmentHeight,this.eventSnapSize);l=this.dateAdapter.addMinutes(a.start,d);a.start=l<r.start?l:r.start}else if("undefined"!=typeof t.edges.bottom){d=O(t.edges.bottom,this.hourSegments,this.hourSegmentHeight,this.eventSnapSize),s=this.dateAdapter.addMinutes(a.end,d);a.end=s>r.end?s:r.end}return a},e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-week-view",template:'\n    <div class="cal-week-view">\n      <mwl-calendar-week-view-header\n        [days]="days"\n        [locale]="locale"\n        [customTemplate]="headerTemplate"\n        (dayHeaderClicked)="dayHeaderClicked.emit($event)"\n        (eventDropped)="\n          eventDropped({ dropData: $event }, $event.newStart, true)\n        "\n      >\n      </mwl-calendar-week-view-header>\n      <div\n        class="cal-all-day-events"\n        #allDayEventsContainer\n        *ngIf="view.allDayEventRows.length > 0"\n        mwlDroppable\n        (dragEnter)="eventDragEnter = eventDragEnter + 1"\n        (dragLeave)="eventDragEnter = eventDragEnter - 1"\n      >\n        <div class="cal-day-columns">\n          <div\n            class="cal-time-label-column"\n            [ngTemplateOutlet]="allDayEventsLabelTemplate"\n          ></div>\n          <div\n            class="cal-day-column"\n            *ngFor="let day of days; trackBy: trackByWeekDayHeaderDate"\n            mwlDroppable\n            dragOverClass="cal-drag-over"\n            (drop)="eventDropped($event, day.date, true)"\n          ></div>\n        </div>\n        <div\n          *ngFor="let eventRow of view.allDayEventRows; trackBy: trackById"\n          #eventRowContainer\n          class="cal-events-row"\n        >\n          <div\n            *ngFor="\n              let allDayEvent of eventRow.row;\n              trackBy: trackByDayOrWeekEvent\n            "\n            #event\n            class="cal-event-container"\n            [class.cal-draggable]="\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\n            "\n            [class.cal-starts-within-week]="!allDayEvent.startsBeforeWeek"\n            [class.cal-ends-within-week]="!allDayEvent.endsAfterWeek"\n            [ngClass]="allDayEvent.event?.cssClass"\n            [style.width.%]="(100 / days.length) * allDayEvent.span"\n            [style.marginLeft.%]="(100 / days.length) * allDayEvent.offset"\n            mwlResizable\n            [resizeSnapGrid]="{ left: dayColumnWidth, right: dayColumnWidth }"\n            [validateResize]="validateResize"\n            (resizeStart)="\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\n            "\n            (resizing)="\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\n            "\n            (resizeEnd)="allDayEventResizeEnded(allDayEvent)"\n            mwlDraggable\n            dragActiveClass="cal-drag-active"\n            [dropData]="{ event: allDayEvent.event, calendarId: calendarId }"\n            [dragAxis]="{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y:\n                !snapDraggedEvents &&\n                allDayEvent.event.draggable &&\n                allDayEventResizes.size === 0\n            }"\n            [dragSnapGrid]="snapDraggedEvents ? { x: dayColumnWidth } : {}"\n            [validateDrag]="validateDrag"\n            (dragStart)="dragStarted(eventRowContainer, event)"\n            (dragging)="allDayEventDragMove()"\n            (dragEnd)="dragEnded(allDayEvent, $event, dayColumnWidth)"\n          >\n            <div\n              class="cal-resize-handle cal-resize-handle-before-start"\n              *ngIf="\n                allDayEvent.event?.resizable?.beforeStart &&\n                !allDayEvent.startsBeforeWeek\n              "\n              mwlResizeHandle\n              [resizeEdges]="{ left: true }"\n            ></div>\n            <mwl-calendar-week-view-event\n              [weekEvent]="allDayEvent"\n              [tooltipPlacement]="tooltipPlacement"\n              [tooltipTemplate]="tooltipTemplate"\n              [tooltipAppendToBody]="tooltipAppendToBody"\n              [tooltipDelay]="tooltipDelay"\n              [customTemplate]="eventTemplate"\n              [eventTitleTemplate]="eventTitleTemplate"\n              [eventActionsTemplate]="eventActionsTemplate"\n              (eventClicked)="eventClicked.emit({ event: allDayEvent.event })"\n            >\n            </mwl-calendar-week-view-event>\n            <div\n              class="cal-resize-handle cal-resize-handle-after-end"\n              *ngIf="\n                allDayEvent.event?.resizable?.afterEnd &&\n                !allDayEvent.endsAfterWeek\n              "\n              mwlResizeHandle\n              [resizeEdges]="{ right: true }"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div\n        class="cal-time-events"\n        mwlDroppable\n        (dragEnter)="eventDragEnter = eventDragEnter + 1"\n        (dragLeave)="eventDragEnter = eventDragEnter - 1"\n      >\n        <div class="cal-time-label-column" *ngIf="view.hourColumns.length > 0">\n          <div\n            *ngFor="\n              let hour of view.hourColumns[0].hours;\n              trackBy: trackByHour;\n              let odd = odd\n            "\n            class="cal-hour"\n            [class.cal-hour-odd]="odd"\n          >\n            <mwl-calendar-week-view-hour-segment\n              *ngFor="let segment of hour.segments; trackBy: trackByHourSegment"\n              [style.height.px]="hourSegmentHeight"\n              [segment]="segment"\n              [segmentHeight]="hourSegmentHeight"\n              [locale]="locale"\n              [customTemplate]="hourSegmentTemplate"\n              [isTimeLabel]="true"\n            >\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class="cal-day-columns"\n          [class.cal-resize-active]="timeEventResizes.size > 0"\n          #dayColumns\n        >\n          <div\n            class="cal-day-column"\n            *ngFor="let column of view.hourColumns; trackBy: trackByHourColumn"\n          >\n            <div\n              *ngFor="\n                let timeEvent of column.events;\n                trackBy: trackByDayOrWeekEvent\n              "\n              #event\n              class="cal-event-container"\n              [class.cal-draggable]="\n                timeEvent.event.draggable && timeEventResizes.size === 0\n              "\n              [class.cal-starts-within-day]="!timeEvent.startsBeforeDay"\n              [class.cal-ends-within-day]="!timeEvent.endsAfterDay"\n              [ngClass]="timeEvent.event.cssClass"\n              [hidden]="timeEvent.height === 0 && timeEvent.width === 0"\n              [style.top.px]="timeEvent.top"\n              [style.height.px]="timeEvent.height"\n              [style.left.%]="timeEvent.left"\n              [style.width.%]="timeEvent.width"\n              mwlResizable\n              [resizeSnapGrid]="{\n                left: dayColumnWidth,\n                right: dayColumnWidth,\n                top: eventSnapSize || hourSegmentHeight,\n                bottom: eventSnapSize || hourSegmentHeight\n              }"\n              [validateResize]="validateResize"\n              [allowNegativeResizes]="true"\n              (resizeStart)="\n                timeEventResizeStarted(dayColumns, timeEvent, $event)\n              "\n              (resizing)="timeEventResizing(timeEvent, $event)"\n              (resizeEnd)="timeEventResizeEnded(timeEvent)"\n              mwlDraggable\n              dragActiveClass="cal-drag-active"\n              [dropData]="{ event: timeEvent.event, calendarId: calendarId }"\n              [dragAxis]="{\n                x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                y: timeEvent.event.draggable && timeEventResizes.size === 0\n              }"\n              [dragSnapGrid]="\n                snapDraggedEvents\n                  ? { x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight }\n                  : {}\n              "\n              [ghostDragEnabled]="!snapDraggedEvents"\n              [validateDrag]="validateDrag"\n              (dragStart)="dragStarted(dayColumns, event, timeEvent)"\n              (dragging)="dragMove(timeEvent, $event)"\n              (dragEnd)="dragEnded(timeEvent, $event, dayColumnWidth, true)"\n            >\n              <div\n                class="cal-resize-handle cal-resize-handle-before-start"\n                *ngIf="\n                  timeEvent.event?.resizable?.beforeStart &&\n                  !timeEvent.startsBeforeDay\n                "\n                mwlResizeHandle\n                [resizeEdges]="{\n                  left: true,\n                  top: true\n                }"\n              ></div>\n              <mwl-calendar-week-view-event\n                [weekEvent]="timeEvent"\n                [tooltipPlacement]="tooltipPlacement"\n                [tooltipTemplate]="tooltipTemplate"\n                [tooltipAppendToBody]="tooltipAppendToBody"\n                [tooltipDisabled]="dragActive || timeEventResizes.size > 0"\n                [tooltipDelay]="tooltipDelay"\n                [customTemplate]="eventTemplate"\n                [eventTitleTemplate]="eventTitleTemplate"\n                [eventActionsTemplate]="eventActionsTemplate"\n                [column]="column"\n                (eventClicked)="eventClicked.emit({ event: timeEvent.event })"\n              >\n              </mwl-calendar-week-view-event>\n              <div\n                class="cal-resize-handle cal-resize-handle-after-end"\n                *ngIf="\n                  timeEvent.event?.resizable?.afterEnd &&\n                  !timeEvent.endsAfterDay\n                "\n                mwlResizeHandle\n                [resizeEdges]="{\n                  right: true,\n                  bottom: true\n                }"\n              ></div>\n            </div>\n\n            <div\n              *ngFor="\n                let hour of column.hours;\n                trackBy: trackByHour;\n                let odd = odd\n              "\n              class="cal-hour"\n              [class.cal-hour-odd]="odd"\n            >\n              <mwl-calendar-week-view-hour-segment\n                *ngFor="\n                  let segment of hour.segments;\n                  trackBy: trackByHourSegment\n                "\n                [style.height.px]="hourSegmentHeight"\n                [segment]="segment"\n                [segmentHeight]="hourSegmentHeight"\n                [locale]="locale"\n                [customTemplate]="hourSegmentTemplate"\n                (mwlClick)="hourSegmentClicked.emit({ date: segment.date })"\n                [clickListenerDisabled]="\n                  hourSegmentClicked.observers.length === 0\n                "\n                mwlDroppable\n                [dragOverClass]="\n                  !dragActive || !snapDraggedEvents ? \'cal-drag-over\' : null\n                "\n                dragActiveClass="cal-drag-active"\n                (drop)="eventDropped($event, segment.date, false)"\n              >\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  '}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:K},{type:String,decorators:[{type:t.Inject,args:[t.LOCALE_ID]}]},{type:f}]},e.propDecorators={viewDate:[{type:t.Input}],events:[{type:t.Input}],excludeDays:[{type:t.Input}],refresh:[{type:t.Input}],locale:[{type:t.Input}],tooltipPlacement:[{type:t.Input}],tooltipTemplate:[{type:t.Input}],tooltipAppendToBody:[{type:t.Input}],tooltipDelay:[{type:t.Input}],weekStartsOn:[{type:t.Input}],headerTemplate:[{type:t.Input}],eventTemplate:[{type:t.Input}],eventTitleTemplate:[{type:t.Input}],eventActionsTemplate:[{type:t.Input}],precision:[{type:t.Input}],weekendDays:[{type:t.Input}],snapDraggedEvents:[{type:t.Input}],hourSegments:[{type:t.Input}],hourSegmentHeight:[{type:t.Input}],dayStartHour:[{type:t.Input}],dayStartMinute:[{type:t.Input}],dayEndHour:[{type:t.Input}],dayEndMinute:[{type:t.Input}],hourSegmentTemplate:[{type:t.Input}],eventSnapSize:[{type:t.Input}],allDayEventsLabelTemplate:[{type:t.Input}],daysInWeek:[{type:t.Input}],dayHeaderClicked:[{type:t.Output}],eventClicked:[{type:t.Output}],eventTimesChanged:[{type:t.Output}],beforeViewRender:[{type:t.Output}],hourSegmentClicked:[{type:t.Output}]},e}(),pe=function(){function e(){this.dayHeaderClicked=new t.EventEmitter,this.eventDropped=new t.EventEmitter,this.trackByWeekDayHeaderDate=C}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-week-view-header",template:'\n    <ng-template\n      #defaultTemplate\n      let-days="days"\n      let-locale="locale"\n      let-dayHeaderClicked="dayHeaderClicked"\n      let-eventDropped="eventDropped"\n      let-trackByWeekDayHeaderDate="trackByWeekDayHeaderDate"\n    >\n      <div class="cal-day-headers">\n        <div\n          class="cal-header"\n          *ngFor="let day of days; trackBy: trackByWeekDayHeaderDate"\n          [class.cal-past]="day.isPast"\n          [class.cal-today]="day.isToday"\n          [class.cal-future]="day.isFuture"\n          [class.cal-weekend]="day.isWeekend"\n          [ngClass]="day.cssClass"\n          (mwlClick)="dayHeaderClicked.emit({ day: day })"\n          mwlDroppable\n          dragOverClass="cal-drag-over"\n          (drop)="\n            eventDropped.emit({\n              event: $event.dropData.event,\n              newStart: day.date\n            })\n          "\n        >\n          <b>{{ day.date | calendarDate: \'weekViewColumnHeader\':locale }}</b\n          ><br />\n          <span>{{\n            day.date | calendarDate: \'weekViewColumnSubHeader\':locale\n          }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        days: days,\n        locale: locale,\n        dayHeaderClicked: dayHeaderClicked,\n        eventDropped: eventDropped,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={days:[{type:t.Input}],locale:[{type:t.Input}],customTemplate:[{type:t.Input}],dayHeaderClicked:[{type:t.Output}],eventDropped:[{type:t.Output}]},e}(),ce=function(){function e(){this.eventClicked=new t.EventEmitter}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-week-view-event",template:'\n    <ng-template\n      #defaultTemplate\n      let-weekEvent="weekEvent"\n      let-tooltipPlacement="tooltipPlacement"\n      let-eventClicked="eventClicked"\n      let-tooltipTemplate="tooltipTemplate"\n      let-tooltipAppendToBody="tooltipAppendToBody"\n      let-tooltipDisabled="tooltipDisabled"\n      let-tooltipDelay="tooltipDelay"\n      let-column="column"\n    >\n      <div\n        class="cal-event"\n        [ngStyle]="{\n          backgroundColor: weekEvent.event.color?.secondary,\n          borderColor: weekEvent.event.color?.primary\n        }"\n        [mwlCalendarTooltip]="\n          !tooltipDisabled\n            ? (weekEvent.event.title\n              | calendarEventTitle: \'weekTooltip\':weekEvent.event)\n            : \'\'\n        "\n        [tooltipPlacement]="tooltipPlacement"\n        [tooltipEvent]="weekEvent.event"\n        [tooltipTemplate]="tooltipTemplate"\n        [tooltipAppendToBody]="tooltipAppendToBody"\n        [tooltipDelay]="tooltipDelay"\n        (mwlClick)="eventClicked.emit()"\n      >\n        <mwl-calendar-event-actions\n          [event]="weekEvent.event"\n          [customTemplate]="eventActionsTemplate"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]="weekEvent.event"\n          [customTemplate]="eventTitleTemplate"\n          view="week"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled,\n        tooltipDelay: tooltipDelay,\n        column: column\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={weekEvent:[{type:t.Input}],tooltipPlacement:[{type:t.Input}],tooltipAppendToBody:[{type:t.Input}],tooltipDisabled:[{type:t.Input}],tooltipDelay:[{type:t.Input}],customTemplate:[{type:t.Input}],eventTitleTemplate:[{type:t.Input}],eventActionsTemplate:[{type:t.Input}],tooltipTemplate:[{type:t.Input}],column:[{type:t.Input}],eventClicked:[{type:t.Output}]},e}(),ue=function(){function e(){}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-week-view-hour-segment",template:'\n    <ng-template\n      #defaultTemplate\n      let-segment="segment"\n      let-locale="locale"\n      let-segmentHeight="segmentHeight"\n      let-isTimeLabel="isTimeLabel"\n    >\n      <div\n        class="cal-hour-segment"\n        [style.height.px]="segmentHeight"\n        [class.cal-hour-start]="segment.isStart"\n        [class.cal-after-hour-start]="!segment.isStart"\n        [ngClass]="segment.cssClass"\n      >\n        <div class="cal-time" *ngIf="isTimeLabel">\n          {{ segment.date | calendarDate: \'weekViewHour\':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={segment:[{type:t.Input}],segmentHeight:[{type:t.Input}],locale:[{type:t.Input}],isTimeLabel:[{type:t.Input}],customTemplate:[{type:t.Input}]},e}(),ve=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,d.ResizableModule,l.DragAndDropModule,ee],declarations:[de,pe,ce,ue],exports:[d.ResizableModule,l.DragAndDropModule,de,pe,ce,ue]}]}],e}(),ye=function(){function e(e,n,a,i){this.cdr=e,this.utils=n,this.dateAdapter=i,this.events=[],this.hourSegments=2,this.hourSegmentHeight=30,this.dayStartHour=0,this.dayStartMinute=0,this.dayEndHour=23,this.dayEndMinute=59,this.eventWidth=150,this.tooltipPlacement="auto",this.tooltipAppendToBody=!0,this.tooltipDelay=null,this.snapDraggedEvents=!0,this.eventClicked=new t.EventEmitter,this.hourSegmentClicked=new t.EventEmitter,this.eventTimesChanged=new t.EventEmitter,this.beforeViewRender=new t.EventEmitter,this.hours=[],this.width=0,this.currentResizes=new Map,this.eventDragEnter=0,this.calendarId=Symbol("angular calendar day view id"),this.dragAlreadyMoved=!1,this.trackByEventId=T,this.trackByHour=S,this.trackByHourSegment=I,this.trackByDayEvent=b,this.locale=a}return e.prototype.ngOnInit=function(){var e=this;this.refresh&&(this.refreshSubscription=this.refresh.subscribe(function(){e.refreshAll(),e.cdr.markForCheck()}))},e.prototype.ngOnDestroy=function(){this.refreshSubscription&&this.refreshSubscription.unsubscribe()},e.prototype.ngOnChanges=function(e){var t=e.viewDate||e.dayStartHour||e.dayStartMinute||e.dayEndHour||e.dayEndMinute||e.hourSegments,n=e.viewDate||e.events||e.dayStartHour||e.dayStartMinute||e.dayEndHour||e.dayEndMinute||e.eventWidth||e.hourSegments;t&&this.refreshHourGrid(),e.events&&w(this.events),n&&this.refreshView(),(t||n)&&this.emitBeforeViewRender()},e.prototype.eventDropped=function(e,t,n){B(e,0,n,this.calendarId)&&this.eventTimesChanged.emit({type:X.Drop,event:e.dropData.event,newStart:t,allDay:n})},e.prototype.resizeStarted=function(e,t,n){this.currentResizes.set(e,{originalTop:e.top,originalHeight:e.height,edge:"undefined"!=typeof t.edges.top?"top":"bottom"});var a=new se(n);this.validateResize=function(e){var t=e.rectangle;return a.validateResize({rectangle:t})},this.cdr.markForCheck()},e.prototype.resizing=function(e,t){var n=this.currentResizes.get(e);"undefined"!=typeof t.edges.top?(e.top=n.originalTop+ +t.edges.top,e.height=n.originalHeight-+t.edges.top):"undefined"!=typeof t.edges.bottom&&(e.height=n.originalHeight+ +t.edges.bottom)},e.prototype.resizeEnded=function(e){var t,n=this.currentResizes.get(e),a="top"===n.edge;t=a?e.top-n.originalTop:e.height-n.originalHeight,e.top=n.originalTop,e.height=n.originalHeight;var i=O(t,this.hourSegments,this.hourSegmentHeight,this.eventSnapSize),r=e.event.start,o=M(this.dateAdapter,e.event,H(this.hourSegments,this.hourSegmentHeight));a?r=this.dateAdapter.addMinutes(r,i):o=this.dateAdapter.addMinutes(o,i),this.eventTimesChanged.emit({newStart:r,newEnd:o,event:e.event,type:X.Resize}),this.currentResizes["delete"](e)},e.prototype.dragStarted=function(e,t,n){var a=this,i=new le(t,e);this.validateDrag=function(e){var t=e.x,n=e.y,r=e.transform;return 0===a.currentResizes.size&&i.validateDrag({x:t,y:n,snapDraggedEvents:a.snapDraggedEvents,dragAlreadyMoved:a.dragAlreadyMoved,transform:r})},this.eventDragEnter=0,this.dragAlreadyMoved=!1,this.currentDrag={dayEvent:n,originalTop:n.top,originalLeft:n.left},this.cdr.markForCheck()},e.prototype.dragMove=function(e){this.dragAlreadyMoved=!0,this.snapDraggedEvents&&(this.currentDrag.dayEvent.top=this.currentDrag.originalTop+e.y,this.currentDrag.dayEvent.left=this.currentDrag.originalLeft+e.x)},e.prototype.dragEnded=function(e,t){if(this.currentDrag.dayEvent.top=this.currentDrag.originalTop,this.currentDrag.dayEvent.left=this.currentDrag.originalLeft,this.currentDrag=null,this.eventDragEnter>0){var n=O(t.y,this.hourSegments,this.hourSegmentHeight,this.eventSnapSize),a=this.dateAdapter.addMinutes(e.event.start,n);t.y<0&&a<this.view.period.start&&(n+=this.dateAdapter.differenceInMinutes(this.view.period.start,a),a=this.view.period.start);var i=void 0;e.event.end&&(i=this.dateAdapter.addMinutes(e.event.end,n)),R(a,i,this.view.period)&&this.eventTimesChanged.emit({newStart:a,newEnd:i,event:e.event,type:X.Drag,allDay:!1})}},e.prototype.refreshHourGrid=function(){this.hours=this.utils.getDayViewHourGrid({viewDate:this.viewDate,hourSegments:this.hourSegments,dayStart:{hour:this.dayStartHour,minute:this.dayStartMinute},dayEnd:{hour:this.dayEndHour,minute:this.dayEndMinute}})},e.prototype.refreshView=function(){this.view=this.utils.getDayView({events:this.events,viewDate:this.viewDate,hourSegments:this.hourSegments,dayStart:{hour:this.dayStartHour,minute:this.dayStartMinute},dayEnd:{hour:this.dayEndHour,minute:this.dayEndMinute},eventWidth:this.eventWidth,segmentHeight:this.hourSegmentHeight})},e.prototype.refreshAll=function(){this.refreshHourGrid(),this.refreshView(),this.emitBeforeViewRender()},e.prototype.emitBeforeViewRender=function(){this.hours&&this.view&&this.beforeViewRender.emit({body:{hourGrid:this.hours,allDayEvents:this.view.allDayEvents},period:this.view.period})},e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-day-view",template:'\n    <div class="cal-day-view">\n      <div\n        class="cal-all-day-events"\n        mwlDroppable\n        dragOverClass="cal-drag-over"\n        dragActiveClass="cal-drag-active"\n        (drop)="eventDropped($event, view.period.start, true)"\n      >\n        <mwl-calendar-day-view-event\n          *ngFor="let event of view.allDayEvents; trackBy: trackByEventId"\n          [ngClass]="event.cssClass"\n          [dayEvent]="{ event: event }"\n          [tooltipPlacement]="tooltipPlacement"\n          [tooltipTemplate]="tooltipTemplate"\n          [tooltipAppendToBody]="tooltipAppendToBody"\n          [tooltipDelay]="tooltipDelay"\n          [customTemplate]="eventTemplate"\n          [eventTitleTemplate]="eventTitleTemplate"\n          [eventActionsTemplate]="eventActionsTemplate"\n          (eventClicked)="eventClicked.emit({ event: event })"\n          [class.cal-draggable]="!snapDraggedEvents && event.draggable"\n          mwlDraggable\n          dragActiveClass="cal-drag-active"\n          [dropData]="{ event: event, calendarId: calendarId }"\n          [dragAxis]="{\n            x: !snapDraggedEvents && event.draggable,\n            y: !snapDraggedEvents && event.draggable\n          }"\n        >\n        </mwl-calendar-day-view-event>\n      </div>\n      <div\n        class="cal-hour-rows"\n        #dayEventsContainer\n        mwlDroppable\n        (dragEnter)="eventDragEnter = eventDragEnter + 1"\n        (dragLeave)="eventDragEnter = eventDragEnter - 1"\n      >\n        <div class="cal-events">\n          <div\n            #event\n            *ngFor="let dayEvent of view?.events; trackBy: trackByDayEvent"\n            class="cal-event-container"\n            [class.cal-draggable]="dayEvent.event.draggable"\n            [class.cal-starts-within-day]="!dayEvent.startsBeforeDay"\n            [class.cal-ends-within-day]="!dayEvent.endsAfterDay"\n            [ngClass]="dayEvent.event.cssClass"\n            mwlResizable\n            [resizeSnapGrid]="{\n              top: eventSnapSize || hourSegmentHeight,\n              bottom: eventSnapSize || hourSegmentHeight\n            }"\n            [validateResize]="validateResize"\n            (resizeStart)="resizeStarted(dayEvent, $event, dayEventsContainer)"\n            (resizing)="resizing(dayEvent, $event)"\n            (resizeEnd)="resizeEnded(dayEvent)"\n            mwlDraggable\n            dragActiveClass="cal-drag-active"\n            [dropData]="{ event: dayEvent.event, calendarId: calendarId }"\n            [dragAxis]="{\n              x:\n                !snapDraggedEvents &&\n                dayEvent.event.draggable &&\n                currentResizes.size === 0,\n              y: dayEvent.event.draggable && currentResizes.size === 0\n            }"\n            [dragSnapGrid]="\n              snapDraggedEvents ? { y: eventSnapSize || hourSegmentHeight } : {}\n            "\n            [validateDrag]="validateDrag"\n            [ghostDragEnabled]="!snapDraggedEvents"\n            (dragStart)="dragStarted(event, dayEventsContainer, dayEvent)"\n            (dragging)="dragMove($event)"\n            (dragEnd)="dragEnded(dayEvent, $event)"\n            [style.marginTop.px]="dayEvent.top"\n            [style.height.px]="dayEvent.height"\n            [style.marginLeft.px]="dayEvent.left + 70"\n            [style.width.px]="dayEvent.width - 1"\n          >\n            <div\n              class="cal-resize-handle cal-resize-handle-before-start"\n              *ngIf="\n                dayEvent.event?.resizable?.beforeStart &&\n                !dayEvent.startsBeforeDay\n              "\n              mwlResizeHandle\n              [resizeEdges]="{ top: true }"\n            ></div>\n            <mwl-calendar-day-view-event\n              [dayEvent]="dayEvent"\n              [tooltipPlacement]="tooltipPlacement"\n              [tooltipTemplate]="tooltipTemplate"\n              [tooltipAppendToBody]="tooltipAppendToBody"\n              [tooltipDelay]="tooltipDelay"\n              [customTemplate]="eventTemplate"\n              [eventTitleTemplate]="eventTitleTemplate"\n              [eventActionsTemplate]="eventActionsTemplate"\n              (eventClicked)="eventClicked.emit({ event: dayEvent.event })"\n            >\n            </mwl-calendar-day-view-event>\n            <div\n              class="cal-resize-handle cal-resize-handle-after-end"\n              *ngIf="\n                dayEvent.event?.resizable?.afterEnd && !dayEvent.endsAfterDay\n              "\n              mwlResizeHandle\n              [resizeEdges]="{ bottom: true }"\n            ></div>\n          </div>\n        </div>\n        <div\n          class="cal-hour"\n          *ngFor="let hour of hours; trackBy: trackByHour"\n          [style.minWidth.px]="view?.width + 70"\n        >\n          <mwl-calendar-day-view-hour-segment\n            *ngFor="let segment of hour.segments; trackBy: trackByHourSegment"\n            [style.height.px]="hourSegmentHeight"\n            [segment]="segment"\n            [segmentHeight]="hourSegmentHeight"\n            [locale]="locale"\n            [customTemplate]="hourSegmentTemplate"\n            (mwlClick)="hourSegmentClicked.emit({ date: segment.date })"\n            [clickListenerDisabled]="hourSegmentClicked.observers.length === 0"\n            mwlDroppable\n            dragOverClass="cal-drag-over"\n            dragActiveClass="cal-drag-active"\n            (drop)="eventDropped($event, segment.date, false)"\n          >\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  '}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:K},{type:String,decorators:[{type:t.Inject,args:[t.LOCALE_ID]}]},{type:f}]},e.propDecorators={viewDate:[{type:t.Input}],events:[{type:t.Input}],hourSegments:[{type:t.Input}],hourSegmentHeight:[{type:t.Input}],dayStartHour:[{type:t.Input}],dayStartMinute:[{type:t.Input}],dayEndHour:[{type:t.Input}],dayEndMinute:[{type:t.Input}],eventWidth:[{type:t.Input}],refresh:[{type:t.Input}],locale:[{type:t.Input}],eventSnapSize:[{type:t.Input}],tooltipPlacement:[{type:t.Input}],tooltipTemplate:[{type:t.Input}],tooltipAppendToBody:[{type:t.Input}],tooltipDelay:[{type:t.Input}],hourSegmentTemplate:[{type:t.Input}],eventTemplate:[{type:t.Input}],eventTitleTemplate:[{type:t.Input}],eventActionsTemplate:[{type:t.Input}],snapDraggedEvents:[{type:t.Input}],eventClicked:[{type:t.Output}],hourSegmentClicked:[{type:t.Output}],eventTimesChanged:[{type:t.Output}],beforeViewRender:[{type:t.Output}]},e}(),he=function(){function e(){}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-day-view-hour-segment",template:'\n    <ng-template\n      #defaultTemplate\n      let-segment="segment"\n      let-locale="locale"\n      let-segmentHeight="segmentHeight"\n    >\n      <div\n        class="cal-hour-segment"\n        [style.height.px]="segmentHeight"\n        [class.cal-hour-start]="segment.isStart"\n        [class.cal-after-hour-start]="!segment.isStart"\n        [ngClass]="segment.cssClass"\n      >\n        <div class="cal-time">\n          {{ segment.date | calendarDate: \'dayViewHour\':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={segment:[{type:t.Input}],segmentHeight:[{type:t.Input}],locale:[{type:t.Input}],customTemplate:[{type:t.Input}]},e}(),me=function(){function e(){this.eventClicked=new t.EventEmitter}return e.decorators=[{type:t.Component,args:[{selector:"mwl-calendar-day-view-event",template:'\n    <ng-template\n      #defaultTemplate\n      let-dayEvent="dayEvent"\n      let-tooltipPlacement="tooltipPlacement"\n      let-eventClicked="eventClicked"\n      let-tooltipTemplate="tooltipTemplate"\n      let-tooltipAppendToBody="tooltipAppendToBody"\n      let-tooltipDelay="tooltipDelay"\n    >\n      <div\n        class="cal-event"\n        [ngStyle]="{\n          backgroundColor: dayEvent.event.color?.secondary,\n          borderColor: dayEvent.event.color?.primary\n        }"\n        [mwlCalendarTooltip]="\n          dayEvent.event.title | calendarEventTitle: \'dayTooltip\':dayEvent.event\n        "\n        [tooltipPlacement]="tooltipPlacement"\n        [tooltipEvent]="dayEvent.event"\n        [tooltipTemplate]="tooltipTemplate"\n        [tooltipAppendToBody]="tooltipAppendToBody"\n        [tooltipDelay]="tooltipDelay"\n        (mwlClick)="eventClicked.emit()"\n      >\n        <mwl-calendar-event-actions\n          [event]="dayEvent.event"\n          [customTemplate]="eventActionsTemplate"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]="dayEvent.event"\n          [customTemplate]="eventTitleTemplate"\n          view="day"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDelay: tooltipDelay\n      }"\n    >\n    </ng-template>\n  '}]}],e.propDecorators={dayEvent:[{type:t.Input}],tooltipPlacement:[{type:t.Input}],tooltipAppendToBody:[{type:t.Input}],customTemplate:[{type:t.Input}],eventTitleTemplate:[{type:t.Input}],eventActionsTemplate:[{type:t.Input}],tooltipTemplate:[{type:t.Input}],tooltipDelay:[{type:t.Input}],eventClicked:[{type:t.Output}]},e}(),ge=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,d.ResizableModule,l.DragAndDropModule,ee],declarations:[ye,he,me],exports:[d.ResizableModule,l.DragAndDropModule,ye,he,me]}]}],e}(),fe=function(){function e(){}return e.forRoot=function(t,n){return void 0===n&&(n={}),{ngModule:e,providers:[t,n.eventTitleFormatter||Y,n.dateFormatter||L,n.utils||K]}},e.decorators=[{type:t.NgModule,args:[{imports:[ee,oe,ve,ge],exports:[ee,oe,ve,ge]}]}],e}();Object.defineProperty(e,"DAYS_OF_WEEK",{enumerable:!0,get:function(){return o.DAYS_OF_WEEK}}),e.CalendarAngularDateFormatter=j,e.CalendarCommonModule=ee,e.CalendarDateFormatter=L,e.CalendarDayModule=ge,e.CalendarDayViewComponent=ye,e.CalendarEventTimesChangedEventType=X,e.CalendarEventTitleFormatter=Y,e.CalendarModule=fe,e.CalendarMomentDateFormatter=J,e.CalendarMonthModule=oe,e.CalendarMonthViewComponent=te,e.CalendarNativeDateFormatter=Q,e.CalendarUtils=K,e.CalendarView=D,e.CalendarWeekModule=ve,e.CalendarWeekViewComponent=de,e.DateAdapter=f,e.MOMENT=Z,e.collapseAnimation=ie,e.getWeekViewPeriod=x,e.ɵa=re,e.ɵb=y,e.ɵc=h,e.ɵd=m,e.ɵe=g,e.ɵf=V,e.ɵg=P,e.ɵh=F,e.ɵi=$,e.ɵj=_,e.ɵk=U,e.ɵl=ae,e.ɵm=ne,e.ɵn=pe,e.ɵo=ce,e.ɵp=ue,e.ɵq=he,e.ɵr=me,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-calendar.umd.min.js.map