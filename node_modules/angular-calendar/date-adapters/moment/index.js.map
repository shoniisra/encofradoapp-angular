{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../projects/angular-calendar/src/date-adapters/moment/index.ts"],"names":[],"mappings":";;;AAAA,8DAA2F;AAG3F,SAAgB,cAAc,CAAC,MAAM;IACnC,4BACK,uBAAkB,CAAC,MAAM,CAAC,IAE7B,QAAQ,EAAR,UAAS,IAA4B,EAAE,MAAc;YACnD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;iBACpB,MAAM,EAAE,CAAC;QACd,CAAC;QAED,SAAS,EAAT,UAAU,IAA4B,EAAE,MAAc;YACpD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC;iBACrB,MAAM,EAAE,CAAC;QACd,CAAC;QAED,OAAO,EAAP,UAAQ,IAA4B,EAAE,MAAc;YAClD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;iBACxB,MAAM,EAAE,CAAC;QACd,CAAC;QAED,QAAQ,EAAR,UAAS,IAA4B,EAAE,MAAc;YACnD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;iBACzB,MAAM,EAAE,CAAC;QACd,CAAC;QAED,SAAS,EAAT,UAAU,IAA4B,EAAE,MAAc;YACpD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC;iBAC1B,MAAM,EAAE,CAAC;QACd,CAAC;QAED,UAAU,EAAV,UAAW,IAA4B;YACrC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;QAED,OAAO,EAAP,UAAQ,IAA4B,EAAE,UAAkB;YACtD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,IAAI,CAAC,UAAU,CAAC;iBAChB,MAAM,EAAE,CAAC;QACd,CAAC;QAED,QAAQ,EAAR,UAAS,IAA4B,EAAE,KAAa;YAClD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,KAAK,CAAC,KAAK,CAAC;iBACZ,MAAM,EAAE,CAAC;QACd,CAAC;QAED,OAAO,EAAP,UAAQ,IAA4B,EAAE,IAAY;YAChD,OAAO,MAAM,CAAC,IAAI,CAAC;iBAChB,IAAI,CAAC,IAAI,CAAC;iBACV,MAAM,EAAE,CAAC;QACd,CAAC;QAED,OAAO,EAAP,UAAQ,IAA4B;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;QAED,OAAO,EAAP,UAAQ,IAA4B;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,IACD;AACJ,CAAC;AAhED,wCAgEC","sourcesContent":["import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/moment';\nimport { DateAdapter } from '../date-adapter';\n\nexport function adapterFactory(moment): DateAdapter {\n  return {\n    ...baseAdapterFactory(moment),\n\n    addWeeks(date: Date | string | number, amount: number): Date {\n      return moment(date)\n        .add(amount, 'weeks')\n        .toDate();\n    },\n\n    addMonths(date: Date | string | number, amount: number): Date {\n      return moment(date)\n        .add(amount, 'months')\n        .toDate();\n    },\n\n    subDays(date: Date | string | number, amount: number): Date {\n      return moment(date)\n        .subtract(amount, 'days')\n        .toDate();\n    },\n\n    subWeeks(date: Date | string | number, amount: number): Date {\n      return moment(date)\n        .subtract(amount, 'weeks')\n        .toDate();\n    },\n\n    subMonths(date: Date | string | number, amount: number): Date {\n      return moment(date)\n        .subtract(amount, 'months')\n        .toDate();\n    },\n\n    getISOWeek(date: Date | string | number): number {\n      return moment(date).isoWeek();\n    },\n\n    setDate(date: Date | string | number, dayOfMonth: number): Date {\n      return moment(date)\n        .date(dayOfMonth)\n        .toDate();\n    },\n\n    setMonth(date: Date | string | number, month: number): Date {\n      return moment(date)\n        .month(month)\n        .toDate();\n    },\n\n    setYear(date: Date | string | number, year: number): Date {\n      return moment(date)\n        .year(year)\n        .toDate();\n    },\n\n    getDate(date: Date | string | number): number {\n      return moment(date).date();\n    },\n\n    getYear(date: Date | string | number): number {\n      return moment(date).year();\n    }\n  };\n}\n"]}