var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, Inject, PLATFORM_ID } from '@angular/core';
import firebase from 'firebase/app';
export var FirebaseOptionsToken = new InjectionToken('angularfire2.app.options');
export var FirebaseNameOrConfigToken = new InjectionToken('angularfire2.app.nameOrConfig');
export var FIREBASE_OPTIONS = FirebaseOptionsToken;
export var FIREBASE_APP_NAME = FirebaseNameOrConfigToken;
var FirebaseApp = (function () {
    function FirebaseApp() {
    }
    return FirebaseApp;
}());
export { FirebaseApp };
export var VERSION = new Version('5.4.2');
export function _firebaseAppFactory(options, zone, nameOrConfig) {
    var name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';
    var config = typeof nameOrConfig === 'object' && nameOrConfig || {};
    config.name = config.name || name;
    var existingApp = firebase.apps.filter(function (app) { return app && app.name === config.name; })[0];
    return (existingApp || zone.runOutsideAngular(function () { return firebase.initializeApp(options, config); }));
}
var FirebaseAppProvider = {
    provide: FirebaseApp,
    useFactory: _firebaseAppFactory,
    deps: [
        FIREBASE_OPTIONS,
        NgZone,
        [new Optional(), FIREBASE_APP_NAME]
    ]
};
var AngularFireModule = (function () {
    function AngularFireModule(platformId) {
        if (firebase.registerVersion) {
            firebase.registerVersion('angularfire', VERSION.full, platformId.toString());
            firebase.registerVersion('angular', NG_VERSION.full);
        }
    }
    AngularFireModule_1 = AngularFireModule;
    AngularFireModule.initializeApp = function (options, nameOrConfig) {
        return {
            ngModule: AngularFireModule_1,
            providers: [
                { provide: FIREBASE_OPTIONS, useValue: options },
                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }
            ]
        };
    };
    var AngularFireModule_1;
    AngularFireModule = AngularFireModule_1 = __decorate([
        NgModule({
            providers: [FirebaseAppProvider],
        }),
        __param(0, Inject(PLATFORM_ID)),
        __metadata("design:paramtypes", [Object])
    ], AngularFireModule);
    return AngularFireModule;
}());
export { AngularFireModule };
//# sourceMappingURL=firebase.app.module.js.map