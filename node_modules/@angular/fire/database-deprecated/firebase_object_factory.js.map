{"version":3,"file":"firebase_object_factory.js","sourceRoot":"","sources":["../../../src/database-deprecated/firebase_object_factory.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AAExE,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,MAAM,UAAU,qBAAqB,CACnC,GAAsB,EACtB,EAAoD;QAAlD,6DAAgB;IAElB,IAAM,gBAAgB,GAAG,IAAI,wBAAwB,CAAC,UAAC,GAAkB;QACvE,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,QAAsB;YAC9C,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAA;QACrE,CAAC,EAAE,UAAA,GAAG;YACJ,IAAI,GAAG,EAAE;gBAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;aAAE;QAC9C,CAAC,CAAC,CAAC;QAEH,OAAO,cAAM,OAAA,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,EAApB,CAAoB,CAAC;IACpC,CAAC,EAAE,GAAG,CAAC,CAAC;IAGR,OAAO,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,cAAM,OAAA,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAAC,CAAC,CAAC;AACtG,CAAC","sourcesContent":["import { NgZone } from '@angular/core';\nimport { FirebaseObjectObservable } from './firebase_object_observable';\nimport { Observer } from 'rxjs';\nimport { observeOn } from 'rxjs/operators';\nimport * as utils from './utils';\nimport { DataSnapshot, FirebaseObjectFactoryOpts, DatabaseReference } from './interfaces';\nimport { ɵZoneScheduler } from '@angular/fire';\n\nexport function FirebaseObjectFactory (\n  ref: DatabaseReference,\n  { preserveSnapshot }: FirebaseObjectFactoryOpts = {}): FirebaseObjectObservable<any> {\n\n  const objectObservable = new FirebaseObjectObservable((obs: Observer<any>) => {\n    let fn = ref.on('value', (snapshot: DataSnapshot) => {\n      obs.next(preserveSnapshot ? snapshot : utils.unwrapMapFn(snapshot))\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n\n    return () => ref.off('value', fn);\n  }, ref);\n\n  // TODO: should be in the subscription zone instead\n  return observeOn.call(objectObservable, new NgZone({}).run(() => new ɵZoneScheduler(Zone.current)));\n}\n"]}