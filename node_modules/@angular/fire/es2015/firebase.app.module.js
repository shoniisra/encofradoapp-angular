var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var AngularFireModule_1;
import { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, Inject, PLATFORM_ID } from '@angular/core';
import firebase from 'firebase/app';
export const FirebaseOptionsToken = new InjectionToken('angularfire2.app.options');
export const FirebaseNameOrConfigToken = new InjectionToken('angularfire2.app.nameOrConfig');
export const FIREBASE_OPTIONS = FirebaseOptionsToken;
export const FIREBASE_APP_NAME = FirebaseNameOrConfigToken;
export class FirebaseApp {
}
export const VERSION = new Version('5.4.2');
export function _firebaseAppFactory(options, zone, nameOrConfig) {
    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';
    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};
    config.name = config.name || name;
    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];
    return (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config)));
}
const FirebaseAppProvider = {
    provide: FirebaseApp,
    useFactory: _firebaseAppFactory,
    deps: [
        FIREBASE_OPTIONS,
        NgZone,
        [new Optional(), FIREBASE_APP_NAME]
    ]
};
let AngularFireModule = AngularFireModule_1 = class AngularFireModule {
    constructor(platformId) {
        if (firebase.registerVersion) {
            firebase.registerVersion('angularfire', VERSION.full, platformId.toString());
            firebase.registerVersion('angular', NG_VERSION.full);
        }
    }
    static initializeApp(options, nameOrConfig) {
        return {
            ngModule: AngularFireModule_1,
            providers: [
                { provide: FIREBASE_OPTIONS, useValue: options },
                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }
            ]
        };
    }
};
AngularFireModule = AngularFireModule_1 = __decorate([
    NgModule({
        providers: [FirebaseAppProvider],
    }),
    __param(0, Inject(PLATFORM_ID)),
    __metadata("design:paramtypes", [Object])
], AngularFireModule);
export { AngularFireModule };
//# sourceMappingURL=firebase.app.module.js.map