{"version":3,"file":"messaging.js","sourceRoot":"","sources":["../../../../src/messaging/messaging.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { messaging } from 'firebase/app';\nimport { Observable, empty, from, of, throwError } from 'rxjs';\nimport { mergeMap, catchError, map, switchMap, concat, defaultIfEmpty, observeOn } from 'rxjs/operators';\nimport { FirebaseOptions, FirebaseAppConfig, ɵAngularFireSchedulers, _firebaseAppFactory, FIREBASE_APP_NAME, FIREBASE_OPTIONS } from '@angular/fire';\n\n@Injectable()\nexport class AngularFireMessaging {\n  messaging: Observable<messaging.Messaging>;\n  requestPermission: Observable<void>;\n  getToken: Observable<string|null>;\n  tokenChanges: Observable<string|null>;\n  messages: Observable<{}>;\n  requestToken: Observable<string|null>;\n  deleteToken: (token: string) => Observable<boolean>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    // @ts-ignore zapping in the UMD in the build script\n    const requireMessaging = from(import('firebase/messaging'));\n\n    this.messaging = requireMessaging.pipe(\n      observeOn(schedulers.outsideAngular),\n      map(() => _firebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.messaging()),\n    );\n\n    if (!isPlatformServer(platformId)) {\n\n      this.requestPermission = this.messaging.pipe(\n        observeOn(schedulers.outsideAngular),\n        switchMap(messaging => messaging.requestPermission()),\n      );\n\n    } else {\n\n      this.requestPermission = throwError('Not available on server platform.');\n\n    }\n\n    this.getToken = this.messaging.pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(messaging => messaging.getToken()),\n      defaultIfEmpty(null),\n    );\n\n    const tokenChanges = this.messaging.pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(messaging => new Observable(messaging.onTokenRefresh.bind(messaging)).pipe(\n        switchMap(() => messaging.getToken())\n      )),\n    );\n\n    this.tokenChanges = this.getToken.pipe(\n      concat(tokenChanges)\n    );\n\n    this.messages = this.messaging.pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(messaging => new Observable(messaging.onMessage.bind(messaging))),\n    );\n\n    this.requestToken = this.requestPermission.pipe(\n      catchError(() => of(null)),\n      mergeMap(() => this.tokenChanges)\n    );\n\n    this.deleteToken = (token: string) => this.messaging.pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(messaging => messaging.deleteToken(token)),\n      defaultIfEmpty(false),\n    );\n  }\n\n}\n"]}