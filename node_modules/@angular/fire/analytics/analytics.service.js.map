{"version":3,"file":"analytics.service.js","sourceRoot":"","sources":["../../../src/analytics/analytics.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Optional, NgZone, OnDestroy, ComponentFactoryResolver, Inject, PLATFORM_ID, Injector, NgModuleFactory } from '@angular/core';\nimport { Subscription, from, Observable, of } from 'rxjs';\nimport { filter, withLatestFrom, switchMap, map, tap, pairwise, startWith, groupBy, mergeMap, observeOn } from 'rxjs/operators';\nimport { Router, NavigationEnd, ActivationEnd, ROUTES } from '@angular/router';\nimport { ÉµAngularFireSchedulers } from '@angular/fire';\nimport { AngularFireAnalytics, DEBUG_MODE } from './analytics';\nimport { User } from 'firebase/app';\nimport { Title } from '@angular/platform-browser';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY  = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\n\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst DEFAULT_SCREEN_CLASS = '???';\nconst NG_PRIMARY_OUTLET = 'primary';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n\nconst ANNOTATIONS = '__annotations__';\n\n@Injectable()\nexport class ScreenTrackingService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n  \n    constructor(\n      analytics: AngularFireAnalytics,\n      @Optional() router:Router,\n      @Optional() title:Title,\n      componentFactoryResolver: ComponentFactoryResolver,\n      @Inject(PLATFORM_ID) platformId:Object,\n      @Optional() @Inject(DEBUG_MODE) debugModeEnabled:boolean|null,\n      zone: NgZone,\n      injector: Injector\n    ) {\n        if (!router || !isPlatformBrowser(platformId)) { return this }\n        zone.runOutsideAngular(() => {\n            const activationEndEvents = router.events.pipe(filter<ActivationEnd>(e => e instanceof ActivationEnd));\n            const navigationEndEvents = router.events.pipe(filter<NavigationEnd>(e => e instanceof NavigationEnd));\n            this.disposable = navigationEndEvents.pipe(\n                withLatestFrom(activationEndEvents),\n                switchMap(([navigationEnd, activationEnd]) => {\n                    // SEMVER: start using optional chains and nullish coalescing once we support newer typescript\n                    const page_path = navigationEnd.url;\n                    const screen_name = activationEnd.snapshot.routeConfig && activationEnd.snapshot.routeConfig.path || page_path;\n                    const params = {\n                        [SCREEN_NAME_KEY]: screen_name,\n                        [PAGE_PATH_KEY]: page_path,\n                        [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n                        [FIREBASE_SCREEN_NAME_KEY]: screen_name,\n                        [OUTLET_KEY]: activationEnd.snapshot.outlet\n                    };\n                    if (title) {\n                        params[PAGE_TITLE_KEY] = title.getTitle()\n                    }\n                    const component = activationEnd.snapshot.component;\n                    const routeConfig = activationEnd.snapshot.routeConfig;\n                    const loadChildren = routeConfig && routeConfig.loadChildren;\n                    // TODO figure out how to handle minification\n                    if (typeof loadChildren === \"string\") {\n                        // SEMVER: this is the older lazy load style \"./path#ClassName\", drop this when we drop old ng\n                        // TODO is it worth seeing if I can look up the component factory selector from the module name?\n                        // it's lazy so it's not registered with componentFactoryResolver yet... seems a pain for a depreciated style\n                        return of({...params, [SCREEN_CLASS_KEY]: loadChildren.split('#')[1]});\n                    } else if (typeof component === 'string') {\n                        return of({...params, [SCREEN_CLASS_KEY]: component });\n                    } else if (component) {\n                        const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n                        return of({...params, [SCREEN_CLASS_KEY]: componentFactory.selector });\n                    } else if (loadChildren) {\n                        const loadedChildren = loadChildren();\n                        var loadedChildren$: Observable<any> = (loadedChildren instanceof Observable) ? loadedChildren : from(Promise.resolve(loadedChildren));\n                        return loadedChildren$.pipe(\n                          map(lazyModule => {\n                            if (lazyModule instanceof NgModuleFactory) {\n                              // AOT create an injector\n                              const moduleRef = lazyModule.create(injector);\n                              // INVESTIGATE is this the right way to get at the matching route?\n                              const routes = moduleRef.injector.get(ROUTES);\n                              const component = routes[0][0].component; // should i just be grabbing 0-0 here?\n                              try {\n                                const componentFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(component!);\n                                return {...params, [SCREEN_CLASS_KEY]: componentFactory.selector};\n                              } catch(_) {\n                                return {...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS};\n                              }\n                            } else {\n                              // JIT look at the annotations\n                              // INVESTIGATE are there public APIs for this stuff?\n                              const declarations = [].concat.apply([], (lazyModule[ANNOTATIONS] || []).map((f:any) => f.declarations));\n                              const selectors = [].concat.apply([], declarations.map((c:any) => (c[ANNOTATIONS] || []).map((f:any) => f.selector)));\n                              // should I just be grabbing the selector like this or should i match against the route component?\n                              //   const routerModule = lazyModule.ngInjectorDef.imports.find(i => i.ngModule && ....);\n                              //   const route = routerModule.providers[0].find(p => p.provide == ROUTES).useValue[0];\n                              return {...params, [SCREEN_CLASS_KEY]: selectors[0] || DEFAULT_SCREEN_CLASS};\n                            }\n                          })\n                        );\n                    } else {\n                        return of({...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS});\n                    }\n                }),\n                map(params => ({\n                    [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n                    [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n                    ...params\n                })),\n                tap(params => {\n                    // TODO perhaps I can be smarter about this, bubble events up to the nearest outlet?\n                    if (params[OUTLET_KEY] == NG_PRIMARY_OUTLET) {\n                        analytics.setCurrentScreen(params[SCREEN_NAME_KEY]);\n                        analytics.updateConfig({\n                            [PAGE_PATH_KEY]: params[PAGE_PATH_KEY],\n                            [SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY]\n                        });\n                        if (title) {\n                            analytics.updateConfig({ [PAGE_TITLE_KEY]: params[PAGE_TITLE_KEY] })\n                        }\n                    }\n                }),\n                groupBy(params => params[OUTLET_KEY]),\n                mergeMap(group => group.pipe(startWith(undefined), pairwise())),\n                map(([prior, current]) => prior ? {\n                    [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n                    [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n                    [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n                    ...current!\n                } : current!),\n                tap(params => debugModeEnabled && console.info(SCREEN_VIEW_EVENT, params)),\n                tap(params => zone.runOutsideAngular(() => analytics.logEvent(SCREEN_VIEW_EVENT, params)))\n            ).subscribe();\n        });\n    }\n  \n    ngOnDestroy() {\n      if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n  \n}\n\n@Injectable()\nexport class UserTrackingService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    // TODO a user properties injector\n    constructor(\n        analytics: AngularFireAnalytics,\n        zone: NgZone,\n        @Inject(PLATFORM_ID) platformId:Object\n    ) {\n        const schedulers = new ÉµAngularFireSchedulers(zone);\n\n        if (!isPlatformServer(platformId)) {\n            zone.runOutsideAngular(() => {\n                // @ts-ignore zap the import in the UMD\n                this.disposable = from(import('firebase/auth')).pipe(\n                    observeOn(schedulers.outsideAngular),\n                    switchMap(() => analytics.app),\n                    map(app => app.auth()),\n                    switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n                    switchMap(user => analytics.setUserId(user ? user.uid : null!))\n                ).subscribe();\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n}\n\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2**32 - 1)) - 2**31;\n\nconst knownScreenInstanceIDs: {[key:string]: number} = {};\n\nconst getScreenInstanceID = (params:{[key:string]: any}) => {\n    // unique the screen class against the outlet name\n    const screenInstanceKey = [\n        params[SCREEN_CLASS_KEY],\n        params[OUTLET_KEY]\n    ].join(SCREEN_INSTANCE_DELIMITER);\n    if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n        return knownScreenInstanceIDs[screenInstanceKey];\n    } else {\n        const ret = nextScreenInstanceID++;\n        knownScreenInstanceIDs[screenInstanceKey] = ret;\n        return ret;\n    }\n}"]}