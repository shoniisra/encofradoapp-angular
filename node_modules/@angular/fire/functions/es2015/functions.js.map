{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../src/functions/functions.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAClG,OAAO,EAAc,IAAI,EAAE,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAsC,iBAAiB,EAAE,MAAM,eAAe,CAAC;AACtF,OAAO,EAAqB,gBAAgB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,MAAM,eAAe,CAAC;AAGjH,MAAM,CAAC,MAAM,oBAAoB,GAAG,IAAI,cAAc,CAAS,+BAA+B,CAAC,CAAC;AAChG,MAAM,CAAC,MAAM,gBAAgB,GAAG,oBAAoB,CAAC;AAErD,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,cAAc,CAAS,+BAA+B,CAAC,CAAC;AAE5F,MAAM,CAAC,MAAM,MAAM,GAAG,gBAAgB,CAAC;AACvC,MAAM,CAAC,MAAM,MAAM,GAAG,oBAAoB,CAAC;AAG3C,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAS/B,YAC4B,OAAuB,EACV,YAAoD,EACtE,UAAkB,EACvC,IAAY,EACgB,MAAkB,EAClB,MAAkB;QAE9C,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAEnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE;YAC3C,MAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;YAC7D,OAAO,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SAC7C;IAEH,CAAC;IAEM,aAAa,CAAe,IAAY;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACpD,OAAO,CAAC,IAAO,EAAE,EAAE;YACjB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,OAAO,SAAS,CAAC,IAAI,CACnB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EACzC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAS,CAAC,CACtB,CAAC;QACJ,CAAC,CAAA;IACH,CAAC;CAEF,CAAA;AAzCY,oBAAoB;IADhC,UAAU,EAAE;IAWR,WAAA,MAAM,CAAC,gBAAgB,CAAC,CAAA;IACxB,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;IACrC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;IAEnB,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,MAAM,CAAC,CAAA;IAC1B,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,MAAM,CAAC,CAAA;qDAHM,MAAM;QACjC,MAAM;GAbH,oBAAoB,CAyChC;SAzCY,oBAAoB","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { map, observeOn } from 'rxjs/operators';\nimport { FirebaseOptions, FirebaseAppConfig, FIREBASE_APP_NAME } from '@angular/fire';\nimport { FirebaseFunctions, FIREBASE_OPTIONS, _firebaseAppFactory, ɵAngularFireSchedulers } from '@angular/fire';\n\n// SEMVER: @ v6 remove FunctionsRegionToken and FUNCTIONS_REGION in favor of REGION\nexport const FunctionsRegionToken = new InjectionToken<string>('angularfire2.functions.region');\nexport const FUNCTIONS_REGION = FunctionsRegionToken;\n// SEMVER: @ v6 remove FUNCTIONS_ORIGIN in favor of ORIGIN\nexport const FUNCTIONS_ORIGIN = new InjectionToken<string>('angularfire2.functions.origin');\n\nexport const ORIGIN = FUNCTIONS_ORIGIN;\nexport const REGION = FunctionsRegionToken;\n\n@Injectable()\nexport class AngularFireFunctions {\n\n  /**\n   * Firebase Functions instance\n   */\n  public readonly functions: FirebaseFunctions;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(REGION) region:string|null,\n    @Optional() @Inject(ORIGIN) origin:string|null\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n\n    this.functions = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, zone, nameOrConfig);\n      return app.functions(region || undefined);\n    });\n\n    if (origin) {\n      this.functions.useFunctionsEmulator(origin);\n    }\n\n  }\n\n  public httpsCallable<T=any, R=any>(name: string) {\n    const callable = this.functions.httpsCallable(name);\n    return (data: T) => {\n      const callable$ = from(callable(data));\n      return callable$.pipe(\n        observeOn(this.schedulers.outsideAngular),\n        map(r => r.data as R)\n      );\n    }\n  }\n\n}\n"]}