(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/fire')) :
    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/fire'], factory) :
    (factory((global.angularfire2 = global.angularfire2 || {}, global.angularfire2.remote_config = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.angularfire2));
}(this, (function (exports,core,rxjs,operators,fire) { 'use strict';

    var __extends = (undefined && undefined.__extends) || (function () {
        var extendStatics = function (d, b) {
            extendStatics = Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
            return extendStatics(d, b);
        };
        return function (d, b) {
            extendStatics(d, b);
            function __() { this.constructor = d; }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
    })();
    var __assign = (undefined && undefined.__assign) || function () {
        __assign = Object.assign || function(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (undefined && undefined.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var SETTINGS = new core.InjectionToken('angularfire2.remoteConfig.settings');
    var DEFAULTS = new core.InjectionToken('angularfire2.remoteConfig.defaultConfig');
    var Value = (function () {
        function Value(_source, _value) {
            this._source = _source;
            this._value = _value;
        }
        Value.prototype.asBoolean = function () { return ['1', 'true', 't', 'y', 'yes', 'on'].indexOf(this._value.toLowerCase()) > -1; };
        Value.prototype.asString = function () { return this._value; };
        Value.prototype.asNumber = function () { return Number(this._value) || 0; };
        Value.prototype.getSource = function () { return this._source; };
        return Value;
    }());
    var Parameter = (function (_super) {
        __extends(Parameter, _super);
        function Parameter(key, fetchTimeMillis, source, value) {
            var _this = _super.call(this, source, value) || this;
            _this.key = key;
            _this.fetchTimeMillis = fetchTimeMillis;
            return _this;
        }
        return Parameter;
    }(Value));
    var filterTest = function (fn) { return operators.filter(function (it) { return Array.isArray(it) ? it.some(fn) : fn(it); }); };
    var ɵ0 = filterTest;
    var filterRemote = function () { return filterTest(function (p) { return p.getSource() === 'remote'; }); };
    var filterFresh = function (howRecentInMillis) { return filterTest(function (p) { return p.fetchTimeMillis + howRecentInMillis >= new Date().getTime(); }); };
    var AngularFireRemoteConfig = (function () {
        function AngularFireRemoteConfig(options, nameOrConfig, settings, defaultConfig, zone) {
            this.zone = zone;
            var schedulers = new fire.ɵAngularFireSchedulers(zone);
            var remoteConfig$ = rxjs.of(undefined).pipe(operators.observeOn(schedulers.outsideAngular), operators.switchMap(function () { return zone.runOutsideAngular(function () { return rxjs.empty(); }); }), operators.map(function () { return fire._firebaseAppFactory(options, zone, nameOrConfig); }), operators.map(function (app) { return app.remoteConfig(); }), operators.tap(function (rc) {
                if (settings) {
                    rc.settings = settings;
                }
                if (defaultConfig) {
                    rc.defaultConfig = defaultConfig;
                }
            }), operators.startWith(undefined), operators.shareReplay({ bufferSize: 1, refCount: false }));
            var loadedRemoteConfig$ = remoteConfig$.pipe(operators.filter(function (rc) { return !!rc; }));
            var default$ = rxjs.of(Object.keys(defaultConfig || {}).reduce(function (c, k) {
                var _a;
                return (__assign({}, c, (_a = {}, _a[k] = new Value("default", defaultConfig[k].toString()), _a)));
            }, {}));
            var filterOutDefaults = operators.map(function (all) {
                return Object.keys(all)
                    .filter(function (key) { return all[key].getSource() != 'default'; })
                    .reduce(function (acc, key) {
                    var _a;
                    return (__assign({}, acc, (_a = {}, _a[key] = all[key], _a)));
                }, {});
            });
            var existing$ = loadedRemoteConfig$.pipe(operators.switchMap(function (rc) {
                return rc.activate()
                    .then(function () { return rc.ensureInitialized(); })
                    .then(function () { return rc.getAll(); });
            }), filterOutDefaults);
            var fresh$ = loadedRemoteConfig$.pipe(operators.switchMap(function (rc) { return zone.runOutsideAngular(function () {
                return rc.fetchAndActivate()
                    .then(function () { return rc.ensureInitialized(); })
                    .then(function () { return rc.getAll(); });
            }); }), filterOutDefaults);
            this.parameters = rxjs.concat(default$, existing$, fresh$).pipe(scanToParametersArray(remoteConfig$), operators.shareReplay({ bufferSize: 1, refCount: true }));
            this.changes = this.parameters.pipe(operators.switchMap(function (params) { return rxjs.of.apply(void 0, params); }), operators.groupBy(function (param) { return param.key; }), operators.mergeMap(function (group) { return group.pipe(operators.distinctUntilChanged()); }));
            this.strings = proxyAll(this.parameters, 'strings');
            this.booleans = proxyAll(this.parameters, 'booleans');
            this.numbers = proxyAll(this.parameters, 'numbers');
            return fire.ɵlazySDKProxy(this, loadedRemoteConfig$, zone);
        }
        AngularFireRemoteConfig = __decorate([
            core.Injectable(),
            __param(0, core.Inject(fire.FIREBASE_OPTIONS)),
            __param(1, core.Optional()), __param(1, core.Inject(fire.FIREBASE_APP_NAME)),
            __param(2, core.Optional()), __param(2, core.Inject(SETTINGS)),
            __param(3, core.Optional()), __param(3, core.Inject(DEFAULTS)),
            __metadata("design:paramtypes", [Object, Object, Object, Object, core.NgZone])
        ], AngularFireRemoteConfig);
        return AngularFireRemoteConfig;
    }());
    var scanToParametersArray = function (remoteConfig) { return rxjs.pipe(operators.withLatestFrom(remoteConfig), operators.scan(function (existing, _a) {
        var all = _a[0], rc = _a[1];
        var allKeys = existing.map(function (p) { return p.key; }).concat(Object.keys(all)).filter(function (v, i, a) { return a.indexOf(v) === i; });
        return allKeys.map(function (key) {
            var updatedValue = all[key];
            return updatedValue ? new Parameter(key, rc ? rc.fetchTimeMillis : -1, updatedValue.getSource(), updatedValue.asString())
                : existing.find(function (p) { return p.key === key; });
        });
    }, [])); };
    var ɵ1 = scanToParametersArray;
    var AS_TO_FN = { 'strings': 'asString', 'numbers': 'asNumber', 'booleans': 'asBoolean' };
    var STATIC_VALUES = { 'numbers': 0, 'booleans': false, 'strings': undefined };
    var budget = function (interval) { return function (source) { return new rxjs.Observable(function (observer) {
        var timedOut = false;
        var timeout = setTimeout(function () {
            observer.complete();
            timedOut = true;
        }, interval);
        return source.subscribe({
            next: function (val) { if (!timedOut) {
                observer.next(val);
            } },
            error: function (err) { if (!timedOut) {
                clearTimeout(timeout);
                observer.error(err);
            } },
            complete: function () { if (!timedOut) {
                clearTimeout(timeout);
                observer.complete();
            } }
        });
    }); }; };
    var typedMethod = function (it) {
        switch (typeof it) {
            case 'string': return 'asString';
            case 'boolean': return 'asBoolean';
            case 'number': return 'asNumber';
            default: return 'asString';
        }
    };
    var ɵ2 = typedMethod;
    function scanToObject(to) {
        if (to === void 0) { to = 'strings'; }
        return rxjs.pipe(operators.scan(function (c, p) {
            var _a;
            return (__assign({}, c, (_a = {}, _a[p.key] = typeof to === 'object' ?
                p[typedMethod(to[p.key])]() :
                p[AS_TO_FN[to]](), _a)));
        }, typeof to === 'object' ?
            to :
            {}), operators.debounceTime(1), budget(10), operators.distinctUntilChanged(function (a, b) { return JSON.stringify(a) === JSON.stringify(b); }));
    }
    function mapToObject(to) {
        if (to === void 0) { to = 'strings'; }
        return rxjs.pipe(operators.map(function (params) { return params.reduce(function (c, p) {
            var _a;
            return (__assign({}, c, (_a = {}, _a[p.key] = typeof to === 'object' ?
                p[typedMethod(to[p.key])]() :
                p[AS_TO_FN[to]](), _a)));
        }, typeof to === 'object' ?
            to :
            {}); }), operators.distinctUntilChanged(function (a, b) { return JSON.stringify(a) === JSON.stringify(b); }));
    }
    var proxyAll = function (observable, as) { return new Proxy(observable.pipe(mapToObject(as)), {
        get: function (self, name) { return self[name] || observable.pipe(operators.map(function (all) { return all.find(function (p) { return p.key === name; }); }), operators.map(function (param) { return param ? param[AS_TO_FN[as]]() : STATIC_VALUES[as]; }), operators.distinctUntilChanged()); }
    }); };
    var ɵ3 = proxyAll;

    var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var AngularFireRemoteConfigModule = (function () {
        function AngularFireRemoteConfigModule() {
        }
        AngularFireRemoteConfigModule = __decorate$1([
            core.NgModule({
                providers: [AngularFireRemoteConfig]
            })
        ], AngularFireRemoteConfigModule);
        return AngularFireRemoteConfigModule;
    }());

    exports.SETTINGS = SETTINGS;
    exports.DEFAULTS = DEFAULTS;
    exports.Value = Value;
    exports.Parameter = Parameter;
    exports.filterRemote = filterRemote;
    exports.filterFresh = filterFresh;
    exports.AngularFireRemoteConfig = AngularFireRemoteConfig;
    exports.budget = budget;
    exports.scanToObject = scanToObject;
    exports.mapToObject = mapToObject;
    exports.ɵ0 = ɵ0;
    exports.ɵ1 = ɵ1;
    exports.ɵ2 = ɵ2;
    exports.ɵ3 = ɵ3;
    exports.AngularFireRemoteConfigModule = AngularFireRemoteConfigModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
