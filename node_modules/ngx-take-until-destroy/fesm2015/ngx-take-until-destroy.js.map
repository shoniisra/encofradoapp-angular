{"version":3,"file":"ngx-take-until-destroy.js.map","sources":["ng://ngx-take-until-destroy/src/take-until-destroy.ts"],"sourcesContent":["import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport const untilDestroyed = (\n  componentInstance,\n  destroyMethodName = 'ngOnDestroy'\n) => <T>(source: Observable<T>) => {\n  const originalDestroy = componentInstance[destroyMethodName];\n  if (isFunction(originalDestroy) === false) {\n    throw new Error(\n      `${\n        componentInstance.constructor.name\n      } is using untilDestroyed but doesn't implement ${destroyMethodName}`\n    );\n  }\n  if (!componentInstance['__takeUntilDestroy']) {\n    componentInstance['__takeUntilDestroy'] = new Subject();\n\n    componentInstance[destroyMethodName] = function() {\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n      componentInstance['__takeUntilDestroy'].next(true);\n      componentInstance['__takeUntilDestroy'].complete();\n    };\n  }\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAGA,oBAAoB,KAAK;IACvB,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;CACpC;;AAED,MAAa,cAAc,GAAG,CAC5B,iBAAiB,EACjB,iBAAiB,GAAG,aAAa,KAC9B,CAAI,MAAqB;;IAC5B,MAAM,eAAe,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;IAC7D,IAAI,UAAU,CAAC,eAAe,CAAC,KAAK,KAAK,EAAE;QACzC,MAAM,IAAI,KAAK,CACb,GACE,iBAAiB,CAAC,WAAW,CAAC,IAChC,kDAAkD,iBAAiB,EAAE,CACtE,CAAC;KACH;IACD,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,EAAE;QAC5C,iBAAiB,CAAC,oBAAoB,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;QAExD,iBAAiB,CAAC,iBAAiB,CAAC,GAAG;YACrC,UAAU,CAAC,eAAe,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACtE,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,QAAQ,EAAE,CAAC;SACpD,CAAC;KACH;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAI,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;CAC3E;;;;;;;;;;;;;;;;;;;"}
