{"version":3,"sources":["./node_modules/@iconify/icons-ic/twotone-home.js","./src/@vex/components/secondary-toolbar/secondary-toolbar.component.html","./src/app/pages/ui/forms/form-wizard/form-wizard.component.html","./src/@vex/animations/fade-in-right.animation.ts","./src/@vex/animations/fade-in-up.animation.ts","./src/@vex/animations/stagger.animation.ts","./src/@vex/components/breadcrumbs/breadcrumb/breadcrumb.component.ts","./src/@vex/components/breadcrumbs/breadcrumbs.component.ts","./src/@vex/components/breadcrumbs/breadcrumbs.module.ts","./src/@vex/components/secondary-toolbar/secondary-toolbar.component.scss","./src/@vex/components/secondary-toolbar/secondary-toolbar.component.ts","./src/@vex/components/secondary-toolbar/secondary-toolbar.module.ts","./src/app/pages/ui/forms/form-wizard/form-wizard-routing.module.ts","./src/app/pages/ui/forms/form-wizard/form-wizard.component.scss","./src/app/pages/ui/forms/form-wizard/form-wizard.component.ts","./src/app/pages/ui/forms/form-wizard/form-wizard.module.ts"],"names":[],"mappings":"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","file":"pages-ui-forms-form-wizard-form-wizard-module.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3zm5 15h-2v-6H9v6H7v-7.81l5-4.5 5 4.5V18z\\\" fill=\\\"currentColor\\\"/><path opacity=\\\".3\\\" d=\\\"M7 10.19V18h2v-6h6v6h2v-7.81l-5-4.5z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export default \"<div class=\\\"secondary-toolbar-placeholder\\\">&nbsp;</div>\\n\\n<div [ngClass]=\\\"{ 'fixed': fixed$ | async, 'w-full': !(fixed$ | async) }\\\"\\n     class=\\\"secondary-toolbar shadow-b py-1 z-40 border-t\\\"\\n     fxLayout=\\\"row\\\">\\n  <div class=\\\"px-gutter\\\" fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" vexContainer>\\n    <h1 *ngIf=\\\"current\\\"\\n        class=\\\"subheading-2 font-medium m-0 ltr:pr-3 rtl:pl-3 ltr:border-r rtl:border-l ltr:mr-3 rtl:ml-3\\\"\\n        fxFlex.xs=\\\"auto\\\">{{ current }}</h1>\\n\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\"","export default \"<vex-secondary-toolbar current=\\\"Form Wizard\\\">\\n  <vex-breadcrumbs [crumbs]=\\\"['Forms', 'Form Wizard']\\\" fxFlex=\\\"auto\\\"></vex-breadcrumbs>\\n\\n  <button class=\\\"ml-2\\\" color=\\\"primary\\\" mat-icon-button type=\\\"button\\\">\\n    <mat-icon [icIcon]=\\\"icMoreVert\\\"></mat-icon>\\n  </button>\\n</vex-secondary-toolbar>\\n\\n<div @stagger class=\\\"p-gutter\\\" vexContainer>\\n\\n  <h2 class=\\\"title mb-4\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <span @scaleIn\\n          [style.background-color]=\\\"theme.colors.primary['500'] | colorFade:0.9\\\"\\n          class=\\\"w-10 h-10 rounded-full text-primary-500 mr-3 flex items-center justify-center\\\">\\n      <ic-icon [icon]=\\\"icDescription\\\" height=\\\"20px\\\" width=\\\"20px\\\"></ic-icon>\\n    </span>\\n    <span @fadeInRight class=\\\"block\\\">Horizontal Form Wizard</span>\\n  </h2>\\n\\n  <div @fadeInUp class=\\\"card overflow-hidden\\\">\\n    <mat-horizontal-stepper #stepper=\\\"matHorizontalStepper\\\" [linear]=\\\"true\\\">\\n      <ng-template matStepperIcon=\\\"edit\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"done\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <mat-step [stepControl]=\\\"accountFormGroup\\\">\\n        <form [formGroup]=\\\"accountFormGroup\\\">\\n          <ng-template matStepLabel>Create Account</ng-template>\\n\\n          <h2 class=\\\"title m-0\\\">Create Account</h2>\\n          <div class=\\\"subheading-1\\\">Set up your account for testing purposes.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Account Username</mat-label>\\n              <input formControlName=\\\"username\\\" matInput required>\\n              <mat-hint>This will be your unique login name.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Name</mat-label>\\n              <input formControlName=\\\"name\\\" matInput required>\\n              <mat-hint>How may we call you?</mat-hint>\\n            </mat-form-field>\\n\\n            <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"8px\\\" fxLayoutGap.gt-xs=\\\"24px\\\">\\n              <mat-form-field fxFlex=\\\"auto\\\">\\n                <mat-label>E-Mail</mat-label>\\n                <input formControlName=\\\"email\\\" matInput required>\\n                <mat-hint align=\\\"end\\\">example@example.com</mat-hint>\\n              </mat-form-field>\\n\\n              <div fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"8px\\\">\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"none\\\">\\n                  <mat-label>Code</mat-label>\\n                  <mat-select formControlName=\\\"phonePrefix\\\">\\n                    <mat-option *ngFor=\\\"let option of phonePrefixOptions\\\" [value]=\\\"option\\\">{{ option }}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"auto\\\">\\n                  <mat-label>Phone Number</mat-label>\\n                  <input formControlName=\\\"phone\\\" matInput>\\n                  <mat-hint align=\\\"end\\\"></mat-hint>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button (click)=\\\"stepper.reset()\\\" [disabled]=\\\"accountFormGroup.pristine\\\" color=\\\"primary\\\" mat-button\\n                    type=\\\"button\\\">RESET\\n            </button>\\n            <button [disabled]=\\\"accountFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"passwordFormGroup\\\">\\n        <form [formGroup]=\\\"passwordFormGroup\\\">\\n          <ng-template matStepLabel>Select a Password</ng-template>\\n\\n          <h2 class=\\\"title m-0\\\">Select a Password</h2>\\n          <div class=\\\"subheading-1\\\">Enter your password you will use to log in.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"password\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Confirm Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"passwordConfirm\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Please type in your password again.</mat-hint>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button [disabled]=\\\"passwordFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"confirmFormGroup\\\">\\n        <form [formGroup]=\\\"confirmFormGroup\\\">\\n          <ng-template matStepLabel>Confirm Creation</ng-template>\\n\\n          <div class=\\\"title m-0\\\">You're almost there!</div>\\n          <div class=\\\"subheading-1\\\">To finish registration, accept our terms of service and click on \\\"Create Account\\\".\\n          </div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-checkbox class=\\\"checkbox\\\" formControlName=\\\"terms\\\">\\n              I agree to the terms of service and the usual stuff. *\\n            </mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button (click)=\\\"submit()\\\" [disabled]=\\\"confirmFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button\\n                    matStepperNext>\\n              CREATE ACCOUNT\\n            </button>\\n          </div>\\n        </form>\\n\\n      </mat-step>\\n    </mat-horizontal-stepper>\\n  </div>\\n\\n  <h2 class=\\\"title mt-6 mb-4\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <span @scaleIn\\n          [style.background-color]=\\\"theme.colors.primary['500'] | colorFade:0.9\\\"\\n          class=\\\"w-10 h-10 rounded-full text-primary-500 mr-3 flex items-center justify-center\\\">\\n      <ic-icon [icon]=\\\"icVerticalSplit\\\" height=\\\"20px\\\" width=\\\"20px\\\"></ic-icon>\\n    </span>\\n    <span @fadeInRight class=\\\"block\\\">Vertical Form Wizard</span>\\n  </h2>\\n\\n  <div @fadeInUp class=\\\"card overflow-hidden\\\">\\n    <mat-vertical-stepper #verticalStepper=\\\"matVerticalStepper\\\" [linear]=\\\"true\\\">\\n      <ng-template matStepperIcon=\\\"edit\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"done\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <mat-step [stepControl]=\\\"verticalAccountFormGroup\\\">\\n        <form [formGroup]=\\\"verticalAccountFormGroup\\\">\\n          <ng-template matStepLabel>Create Account</ng-template>\\n\\n          <div class=\\\"title m-0\\\">Create Account</div>\\n          <div class=\\\"subheading-1\\\">Set up your account for testing purposes.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Account Username</mat-label>\\n              <input formControlName=\\\"username\\\" matInput required>\\n              <mat-hint>This will be your unique login name.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Name</mat-label>\\n              <input formControlName=\\\"name\\\" matInput required>\\n              <mat-hint>How may we call you?</mat-hint>\\n            </mat-form-field>\\n\\n            <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"8px\\\" fxLayoutGap.gt-xs=\\\"24px\\\">\\n              <mat-form-field fxFlex=\\\"auto\\\">\\n                <mat-label>E-Mail</mat-label>\\n                <input formControlName=\\\"email\\\" matInput required>\\n                <mat-hint align=\\\"end\\\">example@example.com</mat-hint>\\n              </mat-form-field>\\n\\n              <div fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"8px\\\">\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"none\\\">\\n                  <mat-label>Code</mat-label>\\n                  <mat-select formControlName=\\\"phonePrefix\\\">\\n                    <mat-option *ngFor=\\\"let option of phonePrefixOptions\\\" [value]=\\\"option\\\">{{ option }}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"auto\\\">\\n                  <mat-label>Phone Number</mat-label>\\n                  <input formControlName=\\\"phone\\\" matInput>\\n                  <mat-hint align=\\\"end\\\"></mat-hint>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button (click)=\\\"verticalStepper.reset()\\\" [disabled]=\\\"verticalAccountFormGroup.pristine\\\" color=\\\"primary\\\"\\n                    mat-button\\n                    type=\\\"button\\\">RESET\\n            </button>\\n            <button [disabled]=\\\"verticalAccountFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>\\n              NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"verticalPasswordFormGroup\\\">\\n        <form [formGroup]=\\\"verticalPasswordFormGroup\\\">\\n          <ng-template matStepLabel>Select a Password</ng-template>\\n\\n          <div class=\\\"title m-0\\\">Select a Password</div>\\n          <div class=\\\"subheading-1\\\">Enter your password you will use to log in.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"password\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Confirm Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"passwordConfirm\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Please type in your password again.</mat-hint>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button [disabled]=\\\"verticalPasswordFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>\\n              NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"verticalConfirmFormGroup\\\">\\n        <form [formGroup]=\\\"verticalConfirmFormGroup\\\">\\n          <ng-template matStepLabel>Confirm Creation</ng-template>\\n\\n          <div class=\\\"title m-0\\\">You're almost there!</div>\\n          <div class=\\\"subheading-1\\\">To finish registration, accept our terms of service and click on \\\"Create Account\\\".\\n          </div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-checkbox class=\\\"checkbox\\\" formControlName=\\\"terms\\\">\\n              I agree to the terms of service and the usual stuff. *\\n            </mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button (click)=\\\"submit()\\\" [disabled]=\\\"verticalConfirmFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button\\n                    matStepperNext>\\n              CREATE ACCOUNT\\n            </button>\\n          </div>\\n        </form>\\n\\n      </mat-step>\\n    </mat-vertical-stepper>\\n  </div>\\n</div>\\n\\n\"","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInRightAnimation(duration: number) {\n  return trigger('fadeInRight', [\n    transition(':enter', [\n      style({\n        transform: 'translateX(-20px)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'translateX(0)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const fadeInRight400ms = fadeInRightAnimation(400);\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInUpAnimation(duration: number) {\n  return trigger('fadeInUp', [\n    transition(':enter', [\n      style({\n        transform: 'translateY(20px)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const fadeInUp400ms = fadeInUpAnimation(400);\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\n\nexport function staggerAnimation(timing: number) {\n  return trigger('stagger', [\n    transition('* => *', [ // each time the binding value changes\n      query('@fadeInUp, @fadeInRight, @scaleIn', stagger(timing, animateChild()), { optional: true }),\n    ])\n  ]);\n}\n\nexport const stagger80ms = staggerAnimation(80);\nexport const stagger60ms = staggerAnimation(60);\nexport const stagger40ms = staggerAnimation(40);\nexport const stagger20ms = staggerAnimation(20);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vex-breadcrumb',\n  template: `\n      <ng-content></ng-content>\n  `,\n  styles: [],\n  host: {\n    class: 'vex-breadcrumb body-2 text-hint leading-none hover:text-primary-500 no-underline trans-ease-out ltr:mr-2 rtl:ml-2'\n  }\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport icHome from '@iconify/icons-ic/twotone-home';\nimport { trackByValue } from '../../utils/track-by';\n\n@Component({\n  selector: 'vex-breadcrumbs',\n  template: `\n      <div class=\"flex items-center\">\n          <vex-breadcrumb>\n              <a [routerLink]=\"['/']\">\n                  <ic-icon [icon]=\"icHome\" inline=\"true\" size=\"20px\"></ic-icon>\n              </a>\n          </vex-breadcrumb>\n          <ng-container *ngFor=\"let crumb of crumbs; trackBy: trackByValue\">\n              <div class=\"w-1 h-1 bg-gray-300 rounded-full ltr:mr-2 rtl:ml-2\"></div>\n              <vex-breadcrumb>\n                  <a [routerLink]=\"[]\">{{ crumb }}</a>\n              </vex-breadcrumb>\n          </ng-container>\n      </div>\n  `\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n  @Input() crumbs: string[] = [];\n\n  trackByValue = trackByValue;\n  icHome = icHome;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatIconModule,\n    FlexLayoutModule,\n    IconModule\n  ],\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\n  exports: [BreadcrumbsComponent]\n})\nexport class BreadcrumbsModule {\n}\n","export default \".secondary-toolbar {\\n  background: var(--secondary-toolbar-background);\\n  height: var(--secondary-toolbar-height);\\n  margin-top: calc(var(--secondary-toolbar-height) * -1);\\n}\\n\\n.secondary-toolbar.fixed {\\n  width: var(--toolbar-width);\\n}\\n\\n.secondary-toolbar-placeholder {\\n  height: var(--secondary-toolbar-height);\\n}\\n\\n::ng-deep .is-mobile .fixed {\\n  width: 100%;\\n}\\n\\n::ng-deep body .fixed {\\n  width: calc(100% - var(--sidenav-width));\\n}\\n\\n::ng-deep vex-breadcrumbs {\\n  display: none;\\n}\\n\\n@media (min-width: 600px) {\\n  ::ng-deep vex-breadcrumbs {\\n    display: block;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Nob25paXNyYS9Eb2N1bWVudG9zL1Byb3llY3Rvcy9lbmNvZnJhZG9BcHBfYW5ndWxhci9zcmMvQHZleC9jb21wb25lbnRzL3NlY29uZGFyeS10b29sYmFyL3NlY29uZGFyeS10b29sYmFyLmNvbXBvbmVudC5zY3NzIiwic3JjL0B2ZXgvY29tcG9uZW50cy9zZWNvbmRhcnktdG9vbGJhci9zZWNvbmRhcnktdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLCtDQUFBO0VBQ0EsdUNBQUE7RUFDQSxzREFBQTtBQ0NGOztBREVBO0VBQ0UsMkJBQUE7QUNDRjs7QURFQTtFQUNFLHVDQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSx3Q0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0U7SUFDRSxjQUFBO0VDQ0Y7QUFDRiIsImZpbGUiOiJzcmMvQHZleC9jb21wb25lbnRzL3NlY29uZGFyeS10b29sYmFyL3NlY29uZGFyeS10b29sYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlY29uZGFyeS10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tc2Vjb25kYXJ5LXRvb2xiYXItYmFja2dyb3VuZCk7XG4gIGhlaWdodDogdmFyKC0tc2Vjb25kYXJ5LXRvb2xiYXItaGVpZ2h0KTtcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1oZWlnaHQpICogLTEpO1xufVxuXG4uc2Vjb25kYXJ5LXRvb2xiYXIuZml4ZWQge1xuICB3aWR0aDogdmFyKC0tdG9vbGJhci13aWR0aCk7XG59XG5cbi5zZWNvbmRhcnktdG9vbGJhci1wbGFjZWhvbGRlciB7XG4gIGhlaWdodDogdmFyKC0tc2Vjb25kYXJ5LXRvb2xiYXItaGVpZ2h0KTtcbn1cblxuOjpuZy1kZWVwIC5pcy1tb2JpbGUgLmZpeGVkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbjo6bmctZGVlcCBib2R5IC5maXhlZCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSB2YXIoLS1zaWRlbmF2LXdpZHRoKSk7XG59XG5cbjo6bmctZGVlcCB2ZXgtYnJlYWRjcnVtYnMge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgOjpuZy1kZWVwIHZleC1icmVhZGNydW1icyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn0iLCIuc2Vjb25kYXJ5LXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1iYWNrZ3JvdW5kKTtcbiAgaGVpZ2h0OiB2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1oZWlnaHQpO1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXNlY29uZGFyeS10b29sYmFyLWhlaWdodCkgKiAtMSk7XG59XG5cbi5zZWNvbmRhcnktdG9vbGJhci5maXhlZCB7XG4gIHdpZHRoOiB2YXIoLS10b29sYmFyLXdpZHRoKTtcbn1cblxuLnNlY29uZGFyeS10b29sYmFyLXBsYWNlaG9sZGVyIHtcbiAgaGVpZ2h0OiB2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1oZWlnaHQpO1xufVxuXG46Om5nLWRlZXAgLmlzLW1vYmlsZSAuZml4ZWQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuOjpuZy1kZWVwIGJvZHkgLmZpeGVkIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIHZhcigtLXNpZGVuYXYtd2lkdGgpKTtcbn1cblxuOjpuZy1kZWVwIHZleC1icmVhZGNydW1icyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICA6Om5nLWRlZXAgdmV4LWJyZWFkY3J1bWJzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufSJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'vex-secondary-toolbar',\n  templateUrl: './secondary-toolbar.component.html',\n  styleUrls: ['./secondary-toolbar.component.scss']\n})\nexport class SecondaryToolbarComponent implements OnInit {\n\n  @Input() current: string;\n  @Input() crumbs: string[];\n\n  fixed$ = this.configService.config$.pipe(\n    map(config => config.toolbar.fixed)\n  );\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecondaryToolbarComponent } from './secondary-toolbar.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BreadcrumbsModule } from '../breadcrumbs/breadcrumbs.module';\nimport { ContainerModule } from '../../directives/container/container.module';\n\n\n@NgModule({\n  declarations: [SecondaryToolbarComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    IconModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    BreadcrumbsModule,\n    ContainerModule\n  ],\n  exports: [SecondaryToolbarComponent]\n})\nexport class SecondaryToolbarModule {\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormWizardComponent } from './form-wizard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormWizardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FormWizardRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VpL2Zvcm1zL2Zvcm0td2l6YXJkL2Zvcm0td2l6YXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { stagger80ms } from '../../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\nimport { scaleIn400ms } from '../../../../../@vex/animations/scale-in.animation';\nimport { fadeInRight400ms } from '../../../../../@vex/animations/fade-in-right.animation';\nimport icVerticalSplit from '@iconify/icons-ic/twotone-vertical-split';\nimport icVisiblity from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport icDoneAll from '@iconify/icons-ic/twotone-done-all';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport theme from '../../../../../@vex/utils/tailwindcss';\n\n@Component({\n  selector: 'vex-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    stagger80ms,\n    fadeInUp400ms,\n    scaleIn400ms,\n    fadeInRight400ms\n  ]\n})\nexport class FormWizardComponent implements OnInit {\n\n  accountFormGroup: FormGroup;\n  passwordFormGroup: FormGroup;\n  confirmFormGroup: FormGroup;\n\n  verticalAccountFormGroup: FormGroup;\n  verticalPasswordFormGroup: FormGroup;\n  verticalConfirmFormGroup: FormGroup;\n\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\n\n  passwordInputType = 'password';\n\n  icDoneAll = icDoneAll;\n  icDescription = icDescription;\n  icVerticalSplit = icVerticalSplit;\n  icVisibility = icVisiblity;\n  icVisibilityOff = icVisibilityOff;\n  icMoreVert = icMoreVert;\n\n  theme = theme;\n\n  constructor(private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    /**\n     * Horizontal Stepper\n     * @type {FormGroup}\n     */\n    this.accountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.passwordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.confirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n\n    /**\n     * Vertical Stepper\n     * @type {FormGroup}\n     */\n    this.verticalAccountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.verticalPasswordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.verticalConfirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n  }\n\n  showPassword() {\n    this.passwordInputType = 'text';\n    this.cd.markForCheck();\n  }\n\n  hidePassword() {\n    this.passwordInputType = 'password';\n    this.cd.markForCheck();\n  }\n\n  submit() {\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\n      duration: 5000\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormWizardRoutingModule } from './form-wizard-routing.module';\nimport { FormWizardComponent } from './form-wizard.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SecondaryToolbarModule } from '../../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\nimport { ColorFadeModule } from '../../../../../@vex/pipes/color/color-fade.module';\n\n\n@NgModule({\n  declarations: [FormWizardComponent],\n  imports: [\n    CommonModule,\n    FormWizardRoutingModule,\n    MatSnackBarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    SecondaryToolbarModule,\n    MatSelectModule,\n    IconModule,\n    BreadcrumbsModule,\n    ContainerModule,\n    ColorFadeModule\n  ]\n})\nexport class FormWizardModule {\n}\n"],"sourceRoot":"webpack:///"}